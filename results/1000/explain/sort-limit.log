===== 1 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 2 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 3 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 4 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 5 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 6 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 7 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 8 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 9 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 10 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 11 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 12 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 13 [Wed Mar  7 01:54:43 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 14 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 15 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 16 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 17 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 18 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 19 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 20 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 21 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 22 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 23 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 24 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 25 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 26 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 27 [Wed Mar  7 01:54:44 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 28 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 29 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 30 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 31 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 32 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 33 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 34 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 35 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 36 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 37 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 38 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 39 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 40 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 41 [Wed Mar  7 01:54:45 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 42 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 43 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 44 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 45 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 46 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 47 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 48 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 49 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 50 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 51 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 52 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 53 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 54 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 55 [Wed Mar  7 01:54:46 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 56 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 57 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 58 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 59 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 60 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 61 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 62 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 63 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 64 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 65 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 66 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 67 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 68 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 69 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 70 [Wed Mar  7 01:54:47 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 71 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 72 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 73 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 74 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 75 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 76 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 77 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 78 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 79 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 80 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 81 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 82 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 83 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 84 [Wed Mar  7 01:54:48 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 85 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 86 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 87 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 88 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 89 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 90 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 91 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 92 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 93 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 94 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 95 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 96 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 97 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 98 [Wed Mar  7 01:54:49 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 99 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 100 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 101 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 102 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 103 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 104 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 105 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=70.21..70.21 rows=1 width=20)
   ->  Limit  (cost=69.93..70.11 rows=10 width=20)
         ->  Incremental Sort  (cost=69.93..87.65 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 106 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 107 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 108 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.42..67.42 rows=1 width=20)
   ->  Limit  (cost=67.12..67.32 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.62 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 109 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 110 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 111 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 112 [Wed Mar  7 01:54:50 CET 2018] scale:1000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 113 [Wed Mar  7 01:54:51 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 114 [Wed Mar  7 01:54:51 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 115 [Wed Mar  7 01:54:51 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 116 [Wed Mar  7 01:54:51 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 117 [Wed Mar  7 01:54:51 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 118 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 119 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 120 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 121 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 122 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 123 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 124 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 125 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 126 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 127 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 128 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 129 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 130 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 131 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 132 [Wed Mar  7 01:54:52 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 133 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 134 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 135 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 136 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 137 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 138 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 139 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 140 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 141 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 142 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 143 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 144 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 145 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 146 [Wed Mar  7 01:54:53 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 147 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 148 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 149 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 150 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 151 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 152 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 153 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 154 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 155 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 156 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 157 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 158 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 159 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 160 [Wed Mar  7 01:54:54 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 161 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 162 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 163 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 164 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 165 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 166 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 167 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 168 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 169 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 170 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 171 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 172 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 173 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 174 [Wed Mar  7 01:54:55 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 175 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 176 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 177 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 178 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 179 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 180 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 181 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 182 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 183 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 184 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 185 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 186 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 187 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 188 [Wed Mar  7 01:54:56 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 189 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 190 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 191 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 192 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 193 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 194 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 195 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 196 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 197 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 198 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 199 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 200 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 201 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 202 [Wed Mar  7 01:54:57 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 203 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 204 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 205 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 206 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 207 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 208 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 209 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 210 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 211 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 212 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 213 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 214 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 215 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 216 [Wed Mar  7 01:54:58 CET 2018] scale:1000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 217 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 218 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 219 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 220 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.41..67.41 rows=1 width=20)
   ->  Limit  (cost=67.12..67.31 rows=10 width=20)
         ->  Incremental Sort  (cost=67.12..86.64 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 221 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 222 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 223 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 224 [Wed Mar  7 01:54:59 CET 2018] scale:1000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 225 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 226 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 227 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 228 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 229 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 230 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 231 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 232 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 233 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 234 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 235 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 236 [Wed Mar  7 01:55:00 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 237 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 238 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 239 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 240 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 241 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 242 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 243 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 244 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 245 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 246 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 247 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 248 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 249 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 250 [Wed Mar  7 01:55:01 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 251 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 252 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 253 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 254 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 255 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 256 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 257 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 258 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 259 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 260 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 261 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 262 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 263 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 264 [Wed Mar  7 01:55:02 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 265 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 266 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 267 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 268 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 269 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 270 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 271 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 272 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 273 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 274 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 275 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 276 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 277 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 278 [Wed Mar  7 01:55:03 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 279 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 280 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 281 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 282 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 283 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 284 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 285 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 286 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 287 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 288 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 289 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 290 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 291 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 292 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 293 [Wed Mar  7 01:55:04 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 294 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 295 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 296 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 297 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 298 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 299 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 300 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 301 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 302 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 303 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 304 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 305 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 306 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 307 [Wed Mar  7 01:55:05 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 308 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 309 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 310 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 311 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 312 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 313 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 314 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 315 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 316 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 317 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 318 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 319 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 320 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 321 [Wed Mar  7 01:55:06 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 322 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 323 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 324 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 325 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 326 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 327 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 328 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 329 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 330 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.08 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 331 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.26 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 332 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.26..67.26 rows=1 width=20)
   ->  Limit  (cost=66.86..67.16 rows=10 width=20)
         ->  Incremental Sort  (cost=66.86..97.32 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 333 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 334 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 335 [Wed Mar  7 01:55:07 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 336 [Wed Mar  7 01:55:08 CET 2018] scale:1000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 337 [Wed Mar  7 01:55:08 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 338 [Wed Mar  7 01:55:08 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 339 [Wed Mar  7 01:55:08 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 340 [Wed Mar  7 01:55:08 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 341 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 342 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 343 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 344 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 345 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 346 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 347 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 348 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 349 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 350 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 351 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 352 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 353 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 354 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 355 [Wed Mar  7 01:55:09 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 356 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 357 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 358 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 359 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 360 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 361 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 362 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 363 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 364 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 365 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 366 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 367 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 368 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 369 [Wed Mar  7 01:55:10 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 370 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 371 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 372 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 373 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 374 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 375 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 376 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 377 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 378 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 379 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 380 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 381 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 382 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 383 [Wed Mar  7 01:55:11 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 384 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 385 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 386 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 387 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 388 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 389 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 390 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 391 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 392 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 393 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 394 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 395 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 396 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 397 [Wed Mar  7 01:55:12 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 398 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 399 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 400 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 401 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 402 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 403 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 404 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 405 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 406 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 407 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 408 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 409 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 410 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 411 [Wed Mar  7 01:55:13 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 412 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 413 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 414 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 415 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 416 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 417 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 418 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 419 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 420 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 421 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 422 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 423 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 424 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 425 [Wed Mar  7 01:55:14 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 426 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 427 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 428 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 429 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 430 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 431 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 432 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 433 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 434 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 435 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 436 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 437 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 438 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 439 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 440 [Wed Mar  7 01:55:15 CET 2018] scale:1000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 441 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.46 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 442 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.48 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 443 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.58 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 444 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=67.31..67.31 rows=1 width=20)
   ->  Limit  (cost=66.85..67.21 rows=10 width=20)
         ->  Incremental Sort  (cost=66.85..103.60 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(8 rows)

===== 445 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 446 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 447 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

===== 448 [Wed Mar  7 01:55:16 CET 2018] scale:1000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=101.06..101.06 rows=1 width=20)
   ->  Limit  (cost=100.94..100.96 rows=10 width=20)
         ->  Sort  (cost=100.94..103.44 rows=1000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=66.83..69.33 rows=1000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..17.00 rows=1000 width=20)
(7 rows)

