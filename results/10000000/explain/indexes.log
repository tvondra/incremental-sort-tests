===== 1 [Wed Mar  7 09:59:53 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1793170.34..1793170.34 rows=1 width=20)
   ->  Incremental Sort  (cost=138016.01..1693170.95 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 2 [Wed Mar  7 10:00:20 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 3 [Wed Mar  7 10:00:49 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 4 [Wed Mar  7 10:01:10 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 5 [Wed Mar  7 10:01:33 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 6 [Wed Mar  7 10:02:02 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 7 [Wed Mar  7 10:02:32 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 8 [Wed Mar  7 10:03:07 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 9 [Wed Mar  7 10:03:48 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1793170.34..1793170.34 rows=1 width=20)
   ->  Incremental Sort  (cost=138016.01..1693170.95 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 10 [Wed Mar  7 10:04:15 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 11 [Wed Mar  7 10:04:43 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 12 [Wed Mar  7 10:05:05 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 13 [Wed Mar  7 10:05:27 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 14 [Wed Mar  7 10:05:53 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 15 [Wed Mar  7 10:06:21 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 16 [Wed Mar  7 10:06:52 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 17 [Wed Mar  7 10:07:30 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 18 [Wed Mar  7 10:07:53 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 19 [Wed Mar  7 10:08:17 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 20 [Wed Mar  7 10:08:38 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 21 [Wed Mar  7 10:09:00 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 22 [Wed Mar  7 10:09:24 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 23 [Wed Mar  7 10:09:48 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 24 [Wed Mar  7 10:10:16 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 25 [Wed Mar  7 10:10:50 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 26 [Wed Mar  7 10:11:14 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 27 [Wed Mar  7 10:11:37 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 28 [Wed Mar  7 10:11:59 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 29 [Wed Mar  7 10:12:21 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 30 [Wed Mar  7 10:12:45 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 31 [Wed Mar  7 10:13:10 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 32 [Wed Mar  7 10:13:39 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 33 [Wed Mar  7 10:14:14 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 34 [Wed Mar  7 10:14:44 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 35 [Wed Mar  7 10:15:08 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 36 [Wed Mar  7 10:15:29 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 37 [Wed Mar  7 10:15:51 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 38 [Wed Mar  7 10:16:16 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 39 [Wed Mar  7 10:16:42 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 40 [Wed Mar  7 10:17:12 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 41 [Wed Mar  7 10:17:48 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 42 [Wed Mar  7 10:18:13 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 43 [Wed Mar  7 10:18:36 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 44 [Wed Mar  7 10:18:58 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 45 [Wed Mar  7 10:19:20 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 46 [Wed Mar  7 10:19:45 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 47 [Wed Mar  7 10:20:12 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 48 [Wed Mar  7 10:20:43 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 49 [Wed Mar  7 10:21:20 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 50 [Wed Mar  7 10:21:45 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 51 [Wed Mar  7 10:22:08 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 52 [Wed Mar  7 10:22:30 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 53 [Wed Mar  7 10:22:52 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 54 [Wed Mar  7 10:23:17 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 55 [Wed Mar  7 10:23:45 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 56 [Wed Mar  7 10:24:16 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 57 [Wed Mar  7 10:24:54 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1793170.34..1793170.34 rows=1 width=20)
   ->  Incremental Sort  (cost=138016.01..1693170.95 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 58 [Wed Mar  7 10:25:21 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 59 [Wed Mar  7 10:25:50 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 60 [Wed Mar  7 10:26:11 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 61 [Wed Mar  7 10:26:34 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 62 [Wed Mar  7 10:26:54 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 63 [Wed Mar  7 10:27:13 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 64 [Wed Mar  7 10:27:34 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 65 [Wed Mar  7 10:27:58 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 66 [Wed Mar  7 10:28:17 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 67 [Wed Mar  7 10:28:46 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 68 [Wed Mar  7 10:29:07 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 69 [Wed Mar  7 10:29:30 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 70 [Wed Mar  7 10:29:49 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 71 [Wed Mar  7 10:30:08 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 72 [Wed Mar  7 10:30:28 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 73 [Wed Mar  7 10:30:51 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 74 [Wed Mar  7 10:31:14 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 75 [Wed Mar  7 10:31:38 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 76 [Wed Mar  7 10:31:59 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 77 [Wed Mar  7 10:32:21 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 78 [Wed Mar  7 10:32:45 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 79 [Wed Mar  7 10:33:09 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 80 [Wed Mar  7 10:33:37 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 81 [Wed Mar  7 10:34:11 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 82 [Wed Mar  7 10:34:35 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 83 [Wed Mar  7 10:34:58 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 84 [Wed Mar  7 10:35:20 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 85 [Wed Mar  7 10:35:42 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 86 [Wed Mar  7 10:36:06 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 87 [Wed Mar  7 10:36:31 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 88 [Wed Mar  7 10:37:00 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 89 [Wed Mar  7 10:37:35 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 90 [Wed Mar  7 10:38:05 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 91 [Wed Mar  7 10:38:29 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 92 [Wed Mar  7 10:38:50 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 93 [Wed Mar  7 10:39:12 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 94 [Wed Mar  7 10:39:37 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 95 [Wed Mar  7 10:40:03 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 96 [Wed Mar  7 10:40:33 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 97 [Wed Mar  7 10:41:09 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 98 [Wed Mar  7 10:41:34 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 99 [Wed Mar  7 10:41:57 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 100 [Wed Mar  7 10:42:19 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 101 [Wed Mar  7 10:42:41 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 102 [Wed Mar  7 10:43:06 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 103 [Wed Mar  7 10:43:33 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 104 [Wed Mar  7 10:44:04 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 105 [Wed Mar  7 10:44:41 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1588080.84..1588080.84 rows=1 width=20)
   ->  Incremental Sort  (cost=119371.51..1488081.45 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 106 [Wed Mar  7 10:45:06 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1498726.00..1498726.00 rows=1 width=20)
   ->  Incremental Sort  (cost=10113.84..1398725.46 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 107 [Wed Mar  7 10:45:29 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=1370100.56..1370100.56 rows=1 width=20)
   ->  Incremental Sort  (cost=823.18..1270101.17 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 108 [Wed Mar  7 10:45:51 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=1197396.24..1197396.24 rows=1 width=20)
   ->  Incremental Sort  (cost=63.42..1097396.85 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 109 [Wed Mar  7 10:46:13 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 110 [Wed Mar  7 10:46:32 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 111 [Wed Mar  7 10:46:52 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 112 [Wed Mar  7 10:47:14 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 113 [Wed Mar  7 10:49:04 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1633528.12..1633528.12 rows=1 width=20)
   ->  Incremental Sort  (cost=13451.20..1533528.73 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 114 [Wed Mar  7 10:49:34 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 115 [Wed Mar  7 10:49:58 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 116 [Wed Mar  7 10:50:19 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 117 [Wed Mar  7 10:50:35 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 118 [Wed Mar  7 10:51:07 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 119 [Wed Mar  7 10:51:46 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 120 [Wed Mar  7 10:52:30 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 121 [Wed Mar  7 10:53:10 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 122 [Wed Mar  7 10:53:42 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 123 [Wed Mar  7 10:54:06 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 124 [Wed Mar  7 10:54:28 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 125 [Wed Mar  7 10:54:43 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 126 [Wed Mar  7 10:55:13 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 127 [Wed Mar  7 10:55:49 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 128 [Wed Mar  7 10:56:29 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 129 [Wed Mar  7 10:57:05 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 130 [Wed Mar  7 10:57:32 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 131 [Wed Mar  7 10:57:56 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 132 [Wed Mar  7 10:58:17 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 133 [Wed Mar  7 10:58:33 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 134 [Wed Mar  7 10:59:00 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 135 [Wed Mar  7 10:59:32 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 136 [Wed Mar  7 11:00:08 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 137 [Wed Mar  7 11:00:40 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 138 [Wed Mar  7 11:01:07 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 139 [Wed Mar  7 11:01:31 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 140 [Wed Mar  7 11:01:52 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 141 [Wed Mar  7 11:02:08 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 142 [Wed Mar  7 11:02:35 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 143 [Wed Mar  7 11:03:08 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 144 [Wed Mar  7 11:03:45 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 145 [Wed Mar  7 11:04:17 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 146 [Wed Mar  7 11:04:44 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 147 [Wed Mar  7 11:05:08 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 148 [Wed Mar  7 11:05:29 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 149 [Wed Mar  7 11:05:45 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 150 [Wed Mar  7 11:06:13 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 151 [Wed Mar  7 11:06:46 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 152 [Wed Mar  7 11:07:24 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 153 [Wed Mar  7 11:07:57 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 154 [Wed Mar  7 11:08:24 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 155 [Wed Mar  7 11:08:48 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 156 [Wed Mar  7 11:09:09 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 157 [Wed Mar  7 11:09:25 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 158 [Wed Mar  7 11:09:53 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 159 [Wed Mar  7 11:10:27 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 160 [Wed Mar  7 11:11:06 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 161 [Wed Mar  7 11:11:39 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 162 [Wed Mar  7 11:12:06 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 163 [Wed Mar  7 11:12:30 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 164 [Wed Mar  7 11:12:51 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 165 [Wed Mar  7 11:13:07 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 166 [Wed Mar  7 11:13:37 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 167 [Wed Mar  7 11:14:11 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 168 [Wed Mar  7 11:14:50 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 169 [Wed Mar  7 11:15:25 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1633528.12..1633528.12 rows=1 width=20)
   ->  Incremental Sort  (cost=13451.20..1533528.73 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 170 [Wed Mar  7 11:15:55 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 171 [Wed Mar  7 11:16:19 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 172 [Wed Mar  7 11:16:40 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 173 [Wed Mar  7 11:16:56 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 174 [Wed Mar  7 11:17:15 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 175 [Wed Mar  7 11:17:36 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 176 [Wed Mar  7 11:17:59 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 177 [Wed Mar  7 11:18:20 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 178 [Wed Mar  7 11:18:53 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 179 [Wed Mar  7 11:19:16 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 180 [Wed Mar  7 11:19:38 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 181 [Wed Mar  7 11:19:54 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 182 [Wed Mar  7 11:20:11 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 183 [Wed Mar  7 11:20:32 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 184 [Wed Mar  7 11:20:53 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 185 [Wed Mar  7 11:21:13 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 186 [Wed Mar  7 11:21:40 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 187 [Wed Mar  7 11:22:04 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 188 [Wed Mar  7 11:22:25 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 189 [Wed Mar  7 11:22:41 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 190 [Wed Mar  7 11:23:08 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 191 [Wed Mar  7 11:23:40 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 192 [Wed Mar  7 11:24:16 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 193 [Wed Mar  7 11:24:48 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 194 [Wed Mar  7 11:25:15 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 195 [Wed Mar  7 11:25:39 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 196 [Wed Mar  7 11:26:00 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 197 [Wed Mar  7 11:26:16 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 198 [Wed Mar  7 11:26:44 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 199 [Wed Mar  7 11:27:16 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 200 [Wed Mar  7 11:27:53 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 201 [Wed Mar  7 11:28:25 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 202 [Wed Mar  7 11:28:52 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 203 [Wed Mar  7 11:29:16 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 204 [Wed Mar  7 11:29:37 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 205 [Wed Mar  7 11:29:53 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 206 [Wed Mar  7 11:30:21 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 207 [Wed Mar  7 11:30:54 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 208 [Wed Mar  7 11:31:32 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 209 [Wed Mar  7 11:32:05 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 210 [Wed Mar  7 11:32:32 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 211 [Wed Mar  7 11:32:56 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 212 [Wed Mar  7 11:33:17 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 213 [Wed Mar  7 11:33:33 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 214 [Wed Mar  7 11:34:02 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 215 [Wed Mar  7 11:34:36 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 216 [Wed Mar  7 11:35:14 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 217 [Wed Mar  7 11:35:47 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1428144.62..1428144.62 rows=1 width=20)
   ->  Incremental Sort  (cost=11417.70..1328145.23 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 218 [Wed Mar  7 11:36:14 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=1179047.88..1179047.88 rows=1 width=20)
   ->  Incremental Sort  (cost=89.04..1079047.34 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 219 [Wed Mar  7 11:36:38 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 220 [Wed Mar  7 11:36:59 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 221 [Wed Mar  7 11:37:15 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 222 [Wed Mar  7 11:37:34 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 223 [Wed Mar  7 11:37:57 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 224 [Wed Mar  7 11:38:19 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 225 [Wed Mar  7 11:40:04 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 226 [Wed Mar  7 11:40:30 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 227 [Wed Mar  7 11:40:49 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 228 [Wed Mar  7 11:41:02 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 229 [Wed Mar  7 11:41:15 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 230 [Wed Mar  7 11:41:51 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 231 [Wed Mar  7 11:42:29 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 232 [Wed Mar  7 11:43:01 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 233 [Wed Mar  7 11:43:24 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 234 [Wed Mar  7 11:43:50 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 235 [Wed Mar  7 11:44:09 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 236 [Wed Mar  7 11:44:22 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 237 [Wed Mar  7 11:44:35 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 238 [Wed Mar  7 11:45:09 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 239 [Wed Mar  7 11:45:43 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 240 [Wed Mar  7 11:46:11 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 241 [Wed Mar  7 11:46:31 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 242 [Wed Mar  7 11:46:57 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 243 [Wed Mar  7 11:47:16 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 244 [Wed Mar  7 11:47:29 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 245 [Wed Mar  7 11:47:42 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 246 [Wed Mar  7 11:48:11 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 247 [Wed Mar  7 11:48:42 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 248 [Wed Mar  7 11:49:06 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 249 [Wed Mar  7 11:49:21 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 250 [Wed Mar  7 11:49:47 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 251 [Wed Mar  7 11:50:06 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 252 [Wed Mar  7 11:50:19 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 253 [Wed Mar  7 11:50:32 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 254 [Wed Mar  7 11:51:02 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 255 [Wed Mar  7 11:51:33 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 256 [Wed Mar  7 11:51:57 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 257 [Wed Mar  7 11:52:13 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 258 [Wed Mar  7 11:52:39 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 259 [Wed Mar  7 11:52:58 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 260 [Wed Mar  7 11:53:11 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 261 [Wed Mar  7 11:53:24 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 262 [Wed Mar  7 11:53:54 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 263 [Wed Mar  7 11:54:26 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 264 [Wed Mar  7 11:54:51 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 265 [Wed Mar  7 11:55:07 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 266 [Wed Mar  7 11:55:33 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 267 [Wed Mar  7 11:55:52 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 268 [Wed Mar  7 11:56:05 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 269 [Wed Mar  7 11:56:18 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 270 [Wed Mar  7 11:56:50 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 271 [Wed Mar  7 11:57:22 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 272 [Wed Mar  7 11:57:47 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 273 [Wed Mar  7 11:58:05 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 274 [Wed Mar  7 11:58:31 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 275 [Wed Mar  7 11:58:50 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 276 [Wed Mar  7 11:59:03 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 277 [Wed Mar  7 11:59:16 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 278 [Wed Mar  7 11:59:48 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 279 [Wed Mar  7 12:00:21 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 280 [Wed Mar  7 12:00:47 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 281 [Wed Mar  7 12:01:06 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 282 [Wed Mar  7 12:01:32 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 283 [Wed Mar  7 12:01:51 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 284 [Wed Mar  7 12:02:04 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 285 [Wed Mar  7 12:02:17 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 286 [Wed Mar  7 12:02:37 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 287 [Wed Mar  7 12:02:57 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 288 [Wed Mar  7 12:03:14 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 289 [Wed Mar  7 12:03:29 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 290 [Wed Mar  7 12:03:55 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 291 [Wed Mar  7 12:04:14 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 292 [Wed Mar  7 12:04:27 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 293 [Wed Mar  7 12:04:40 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 294 [Wed Mar  7 12:04:58 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 295 [Wed Mar  7 12:05:17 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 296 [Wed Mar  7 12:05:33 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 297 [Wed Mar  7 12:05:47 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 298 [Wed Mar  7 12:06:13 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 299 [Wed Mar  7 12:06:32 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 300 [Wed Mar  7 12:06:45 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 301 [Wed Mar  7 12:06:58 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 302 [Wed Mar  7 12:07:27 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 303 [Wed Mar  7 12:07:58 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 304 [Wed Mar  7 12:08:22 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 305 [Wed Mar  7 12:08:37 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 306 [Wed Mar  7 12:09:03 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 307 [Wed Mar  7 12:09:22 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 308 [Wed Mar  7 12:09:35 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 309 [Wed Mar  7 12:09:48 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 310 [Wed Mar  7 12:10:18 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 311 [Wed Mar  7 12:10:49 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 312 [Wed Mar  7 12:11:13 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 313 [Wed Mar  7 12:11:29 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 314 [Wed Mar  7 12:11:55 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 315 [Wed Mar  7 12:12:14 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 316 [Wed Mar  7 12:12:27 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 317 [Wed Mar  7 12:12:40 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 318 [Wed Mar  7 12:13:11 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 319 [Wed Mar  7 12:13:42 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 320 [Wed Mar  7 12:14:07 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 321 [Wed Mar  7 12:14:24 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 322 [Wed Mar  7 12:14:50 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 323 [Wed Mar  7 12:15:09 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 324 [Wed Mar  7 12:15:22 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 325 [Wed Mar  7 12:15:35 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 326 [Wed Mar  7 12:16:06 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 327 [Wed Mar  7 12:16:38 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 328 [Wed Mar  7 12:17:04 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 329 [Wed Mar  7 12:17:22 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Limit  (cost=1262712.89..1262712.89 rows=1 width=20)
   ->  Incremental Sort  (cost=987.14..1162713.50 rows=9999939 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(5 rows)

===== 330 [Wed Mar  7 12:17:48 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 331 [Wed Mar  7 12:18:07 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 332 [Wed Mar  7 12:18:20 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 333 [Wed Mar  7 12:18:33 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 334 [Wed Mar  7 12:18:53 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 335 [Wed Mar  7 12:19:12 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 336 [Wed Mar  7 12:19:29 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 337 [Wed Mar  7 12:21:02 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 338 [Wed Mar  7 12:21:26 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 339 [Wed Mar  7 12:21:40 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 340 [Wed Mar  7 12:21:52 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 341 [Wed Mar  7 12:22:05 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 342 [Wed Mar  7 12:22:42 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 343 [Wed Mar  7 12:23:14 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 344 [Wed Mar  7 12:23:37 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 345 [Wed Mar  7 12:24:00 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 346 [Wed Mar  7 12:24:24 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 347 [Wed Mar  7 12:24:38 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 348 [Wed Mar  7 12:24:51 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 349 [Wed Mar  7 12:25:03 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 350 [Wed Mar  7 12:25:37 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 351 [Wed Mar  7 12:26:05 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1861542.72..1861542.72 rows=1 width=20)
   ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 352 [Wed Mar  7 12:26:24 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1861518.93..1861518.93 rows=1 width=20)
   ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 353 [Wed Mar  7 12:26:43 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 354 [Wed Mar  7 12:27:07 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 355 [Wed Mar  7 12:27:21 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 356 [Wed Mar  7 12:27:34 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 357 [Wed Mar  7 12:27:46 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 358 [Wed Mar  7 12:28:16 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 359 [Wed Mar  7 12:28:40 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 360 [Wed Mar  7 12:28:55 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 361 [Wed Mar  7 12:29:09 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 362 [Wed Mar  7 12:29:33 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 363 [Wed Mar  7 12:29:47 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 364 [Wed Mar  7 12:29:59 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 365 [Wed Mar  7 12:30:12 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 366 [Wed Mar  7 12:30:42 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 367 [Wed Mar  7 12:31:06 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 368 [Wed Mar  7 12:31:21 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 369 [Wed Mar  7 12:31:35 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 370 [Wed Mar  7 12:31:59 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 371 [Wed Mar  7 12:32:13 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 372 [Wed Mar  7 12:32:26 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 373 [Wed Mar  7 12:32:38 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 374 [Wed Mar  7 12:33:09 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 375 [Wed Mar  7 12:33:34 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 376 [Wed Mar  7 12:33:50 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 377 [Wed Mar  7 12:34:04 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 378 [Wed Mar  7 12:34:28 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 379 [Wed Mar  7 12:34:42 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 380 [Wed Mar  7 12:34:55 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 381 [Wed Mar  7 12:35:07 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 382 [Wed Mar  7 12:35:38 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 383 [Wed Mar  7 12:36:04 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 384 [Wed Mar  7 12:36:21 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 385 [Wed Mar  7 12:36:35 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 386 [Wed Mar  7 12:37:00 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 387 [Wed Mar  7 12:37:14 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 388 [Wed Mar  7 12:37:26 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 389 [Wed Mar  7 12:37:39 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 390 [Wed Mar  7 12:38:11 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 391 [Wed Mar  7 12:38:37 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 392 [Wed Mar  7 12:38:55 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 393 [Wed Mar  7 12:39:10 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 394 [Wed Mar  7 12:39:34 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 395 [Wed Mar  7 12:39:48 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 396 [Wed Mar  7 12:40:00 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 397 [Wed Mar  7 12:40:13 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 398 [Wed Mar  7 12:40:33 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 399 [Wed Mar  7 12:40:51 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791033.26..1791033.26 rows=1 width=20)
   ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 400 [Wed Mar  7 12:41:05 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1791007.99..1791007.99 rows=1 width=20)
   ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 401 [Wed Mar  7 12:41:20 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 402 [Wed Mar  7 12:41:44 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 403 [Wed Mar  7 12:41:58 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 404 [Wed Mar  7 12:42:11 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 405 [Wed Mar  7 12:42:23 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 406 [Wed Mar  7 12:42:42 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 407 [Wed Mar  7 12:42:58 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705580.76..1705580.76 rows=1 width=20)
   ->  Gather Merge  (cost=649951.66..1622246.98 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648951.64..659368.36 rows=4166689 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 408 [Wed Mar  7 12:43:11 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1705558.99..1705558.99 rows=1 width=20)
   ->  Gather Merge  (cost=649942.06..1622226.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=648942.04..659358.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

===== 409 [Wed Mar  7 12:43:24 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 410 [Wed Mar  7 12:43:48 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 411 [Wed Mar  7 12:44:02 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 412 [Wed Mar  7 12:44:14 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 413 [Wed Mar  7 12:44:27 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 414 [Wed Mar  7 12:44:57 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 415 [Wed Mar  7 12:45:21 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 416 [Wed Mar  7 12:45:36 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 417 [Wed Mar  7 12:45:50 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 418 [Wed Mar  7 12:46:14 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 419 [Wed Mar  7 12:46:28 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 420 [Wed Mar  7 12:46:41 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 421 [Wed Mar  7 12:46:53 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 422 [Wed Mar  7 12:47:23 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 423 [Wed Mar  7 12:47:48 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 424 [Wed Mar  7 12:48:03 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 425 [Wed Mar  7 12:48:17 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 426 [Wed Mar  7 12:48:41 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 427 [Wed Mar  7 12:48:55 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 428 [Wed Mar  7 12:49:07 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 429 [Wed Mar  7 12:49:20 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 430 [Wed Mar  7 12:49:51 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 431 [Wed Mar  7 12:50:16 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 432 [Wed Mar  7 12:50:32 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 433 [Wed Mar  7 12:50:46 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 434 [Wed Mar  7 12:51:10 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 435 [Wed Mar  7 12:51:24 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 436 [Wed Mar  7 12:51:36 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 437 [Wed Mar  7 12:51:49 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 438 [Wed Mar  7 12:52:21 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 439 [Wed Mar  7 12:52:46 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=1656460.22..1656460.22 rows=1 width=20)
   ->  Sort  (cost=1531459.54..1556459.68 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(4 rows)

===== 440 [Wed Mar  7 12:53:03 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit  (cost=1656439.93..1656439.93 rows=1 width=20)
   ->  Sort  (cost=1531440.69..1556440.54 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(4 rows)

===== 441 [Wed Mar  7 12:53:18 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=1100404.66..1100404.66 rows=1 width=20)
   ->  Incremental Sort  (cost=87.10..1000404.12 rows=10000054 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(5 rows)

===== 442 [Wed Mar  7 12:53:42 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=868084.54..868084.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.01..768084.00 rows=10000054 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(5 rows)

===== 443 [Wed Mar  7 12:53:56 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=912420.54..912420.54 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812420.00 rows=10000054 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(5 rows)

===== 444 [Wed Mar  7 12:54:08 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=912413.48..912413.48 rows=1 width=20)
   ->  Incremental Sort  (cost=1.05..812414.09 rows=9999939 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(5 rows)

===== 445 [Wed Mar  7 12:54:21 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 446 [Wed Mar  7 12:54:41 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 447 [Wed Mar  7 12:54:57 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620128.26..1620128.26 rows=1 width=20)
   ->  Gather Merge  (cost=564499.16..1536794.48 rows=8333378 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563499.14..573915.86 rows=4166689 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(6 rows)

===== 448 [Wed Mar  7 12:55:12 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Limit  (cost=1620109.99..1620109.99 rows=1 width=20)
   ->  Gather Merge  (cost=564493.06..1536777.17 rows=8333282 width=20)
         Workers Planned: 2
         ->  Sort  (cost=563493.04..573909.64 rows=4166641 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(6 rows)

