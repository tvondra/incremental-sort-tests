===== 1 [Wed Mar  7 02:33:12 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=144443.62..144443.62 rows=1 width=20)
   ->  Limit  (cost=144168.62..144343.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=144168.62..161668.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 2 [Wed Mar  7 02:33:13 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137455.23..137455.23 rows=1 width=20)
   ->  Limit  (cost=137178.86..137355.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=137178.86..154815.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 3 [Wed Mar  7 02:33:14 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136863.96..136863.96 rows=1 width=20)
   ->  Limit  (cost=136583.12..136763.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136583.12..154667.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 4 [Wed Mar  7 02:33:16 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136822.97..136822.97 rows=1 width=20)
   ->  Limit  (cost=136540.78..136722.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=136540.78..154760.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 5 [Wed Mar  7 02:33:17 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 6 [Wed Mar  7 02:33:19 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 7 [Wed Mar  7 02:33:21 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 8 [Wed Mar  7 02:33:23 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 9 [Wed Mar  7 02:33:25 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=144443.62..144443.62 rows=1 width=20)
   ->  Limit  (cost=144168.62..144343.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=144168.62..161668.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 10 [Wed Mar  7 02:33:26 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137455.23..137455.23 rows=1 width=20)
   ->  Limit  (cost=137178.86..137355.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=137178.86..154815.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 11 [Wed Mar  7 02:33:27 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136863.96..136863.96 rows=1 width=20)
   ->  Limit  (cost=136583.12..136763.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136583.12..154667.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 12 [Wed Mar  7 02:33:29 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136822.97..136822.97 rows=1 width=20)
   ->  Limit  (cost=136540.78..136722.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=136540.78..154760.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 13 [Wed Mar  7 02:33:30 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 14 [Wed Mar  7 02:33:31 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 15 [Wed Mar  7 02:33:33 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 16 [Wed Mar  7 02:33:35 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 17 [Wed Mar  7 02:33:37 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=144443.62..144443.62 rows=1 width=20)
   ->  Limit  (cost=144168.62..144343.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=144168.62..161668.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 18 [Wed Mar  7 02:33:38 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137455.23..137455.23 rows=1 width=20)
   ->  Limit  (cost=137178.86..137355.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=137178.86..154815.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 19 [Wed Mar  7 02:33:39 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136863.96..136863.96 rows=1 width=20)
   ->  Limit  (cost=136583.12..136763.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136583.12..154667.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 20 [Wed Mar  7 02:33:41 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136822.97..136822.97 rows=1 width=20)
   ->  Limit  (cost=136540.78..136722.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=136540.78..154760.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 21 [Wed Mar  7 02:33:42 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 22 [Wed Mar  7 02:33:44 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 23 [Wed Mar  7 02:33:45 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 24 [Wed Mar  7 02:33:47 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 25 [Wed Mar  7 02:33:49 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=144443.62..144443.62 rows=1 width=20)
   ->  Limit  (cost=144168.62..144343.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=144168.62..161668.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 26 [Wed Mar  7 02:33:50 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137455.23..137455.23 rows=1 width=20)
   ->  Limit  (cost=137178.86..137355.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=137178.86..154815.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 27 [Wed Mar  7 02:33:52 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136863.96..136863.96 rows=1 width=20)
   ->  Limit  (cost=136583.12..136763.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136583.12..154667.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 28 [Wed Mar  7 02:33:53 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136822.97..136822.97 rows=1 width=20)
   ->  Limit  (cost=136540.78..136722.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=136540.78..154760.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 29 [Wed Mar  7 02:33:54 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 30 [Wed Mar  7 02:33:56 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 31 [Wed Mar  7 02:33:58 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 32 [Wed Mar  7 02:34:00 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 33 [Wed Mar  7 02:34:02 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=123933.62..123933.62 rows=1 width=20)
   ->  Limit  (cost=123658.62..123833.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=123658.62..141158.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 34 [Wed Mar  7 02:34:03 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116945.23..116945.23 rows=1 width=20)
   ->  Limit  (cost=116668.86..116845.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=116668.86..134305.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 35 [Wed Mar  7 02:34:05 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116353.96..116353.96 rows=1 width=20)
   ->  Limit  (cost=116073.12..116253.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116073.12..134157.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 36 [Wed Mar  7 02:34:06 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116312.97..116312.97 rows=1 width=20)
   ->  Limit  (cost=116030.78..116212.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=116030.78..134250.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 37 [Wed Mar  7 02:34:08 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 38 [Wed Mar  7 02:34:09 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 39 [Wed Mar  7 02:34:11 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 40 [Wed Mar  7 02:34:14 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 41 [Wed Mar  7 02:34:16 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=123933.62..123933.62 rows=1 width=20)
   ->  Limit  (cost=123658.62..123833.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=123658.62..141158.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 42 [Wed Mar  7 02:34:17 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116945.23..116945.23 rows=1 width=20)
   ->  Limit  (cost=116668.86..116845.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=116668.86..134305.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 43 [Wed Mar  7 02:34:18 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116353.96..116353.96 rows=1 width=20)
   ->  Limit  (cost=116073.12..116253.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116073.12..134157.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 44 [Wed Mar  7 02:34:19 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116312.97..116312.97 rows=1 width=20)
   ->  Limit  (cost=116030.78..116212.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=116030.78..134250.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 45 [Wed Mar  7 02:34:20 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 46 [Wed Mar  7 02:34:21 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 47 [Wed Mar  7 02:34:22 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 48 [Wed Mar  7 02:34:24 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 49 [Wed Mar  7 02:34:25 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=123933.62..123933.62 rows=1 width=20)
   ->  Limit  (cost=123658.62..123833.62 rows=10000 width=20)
         ->  Incremental Sort  (cost=123658.62..141158.84 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 50 [Wed Mar  7 02:34:26 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116945.23..116945.23 rows=1 width=20)
   ->  Limit  (cost=116668.86..116845.23 rows=10000 width=20)
         ->  Incremental Sort  (cost=116668.86..134305.90 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 51 [Wed Mar  7 02:34:27 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116353.96..116353.96 rows=1 width=20)
   ->  Limit  (cost=116073.12..116253.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116073.12..134157.13 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 52 [Wed Mar  7 02:34:28 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116312.97..116312.97 rows=1 width=20)
   ->  Limit  (cost=116030.78..116212.97 rows=10000 width=20)
         ->  Incremental Sort  (cost=116030.78..134250.35 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 53 [Wed Mar  7 02:34:29 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 54 [Wed Mar  7 02:34:30 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 55 [Wed Mar  7 02:34:32 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 56 [Wed Mar  7 02:34:33 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 57 [Wed Mar  7 02:34:35 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=75494.02..75494.02 rows=1 width=20)
   ->  Limit  (cost=75219.02..75394.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=75219.02..92719.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 58 [Wed Mar  7 02:34:35 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60678.42..60678.42 rows=1 width=20)
   ->  Limit  (cost=60400.41..60578.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=60400.41..78201.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 59 [Wed Mar  7 02:34:36 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59382.56..59382.56 rows=1 width=20)
   ->  Limit  (cost=59092.95..59282.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=59092.95..78053.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 60 [Wed Mar  7 02:34:36 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59277.51..59277.51 rows=1 width=20)
   ->  Limit  (cost=58985.91..59177.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=58985.91..78146.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 61 [Wed Mar  7 02:34:37 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 62 [Wed Mar  7 02:34:39 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 63 [Wed Mar  7 02:34:41 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 64 [Wed Mar  7 02:34:43 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 65 [Wed Mar  7 02:34:45 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=75494.02..75494.02 rows=1 width=20)
   ->  Limit  (cost=75219.02..75394.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=75219.02..92719.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 66 [Wed Mar  7 02:34:46 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60678.42..60678.42 rows=1 width=20)
   ->  Limit  (cost=60400.41..60578.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=60400.41..78201.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 67 [Wed Mar  7 02:34:46 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59382.56..59382.56 rows=1 width=20)
   ->  Limit  (cost=59092.95..59282.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=59092.95..78053.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 68 [Wed Mar  7 02:34:47 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59277.51..59277.51 rows=1 width=20)
   ->  Limit  (cost=58985.91..59177.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=58985.91..78146.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 69 [Wed Mar  7 02:34:47 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 70 [Wed Mar  7 02:34:49 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 71 [Wed Mar  7 02:34:51 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 72 [Wed Mar  7 02:34:53 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 73 [Wed Mar  7 02:34:55 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=75494.02..75494.02 rows=1 width=20)
   ->  Limit  (cost=75219.02..75394.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=75219.02..92719.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 74 [Wed Mar  7 02:34:55 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60678.42..60678.42 rows=1 width=20)
   ->  Limit  (cost=60400.41..60578.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=60400.41..78201.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 75 [Wed Mar  7 02:34:56 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59382.56..59382.56 rows=1 width=20)
   ->  Limit  (cost=59092.95..59282.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=59092.95..78053.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 76 [Wed Mar  7 02:34:57 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59277.51..59277.51 rows=1 width=20)
   ->  Limit  (cost=58985.91..59177.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=58985.91..78146.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 77 [Wed Mar  7 02:34:57 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 78 [Wed Mar  7 02:34:59 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 79 [Wed Mar  7 02:35:01 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 80 [Wed Mar  7 02:35:03 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 81 [Wed Mar  7 02:35:05 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=66947.02..66947.02 rows=1 width=20)
   ->  Limit  (cost=66672.02..66847.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=66672.02..84172.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 82 [Wed Mar  7 02:35:05 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52131.42..52131.42 rows=1 width=20)
   ->  Limit  (cost=51853.41..52031.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=51853.41..69654.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 83 [Wed Mar  7 02:35:06 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50835.56..50835.56 rows=1 width=20)
   ->  Limit  (cost=50545.95..50735.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=50545.95..69506.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 84 [Wed Mar  7 02:35:07 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50730.51..50730.51 rows=1 width=20)
   ->  Limit  (cost=50438.91..50630.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=50438.91..69599.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 85 [Wed Mar  7 02:35:07 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 86 [Wed Mar  7 02:35:09 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 87 [Wed Mar  7 02:35:11 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 88 [Wed Mar  7 02:35:13 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 89 [Wed Mar  7 02:35:15 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=66947.02..66947.02 rows=1 width=20)
   ->  Limit  (cost=66672.02..66847.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=66672.02..84172.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 90 [Wed Mar  7 02:35:15 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52131.42..52131.42 rows=1 width=20)
   ->  Limit  (cost=51853.41..52031.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=51853.41..69654.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 91 [Wed Mar  7 02:35:16 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50835.56..50835.56 rows=1 width=20)
   ->  Limit  (cost=50545.95..50735.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=50545.95..69506.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 92 [Wed Mar  7 02:35:16 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50730.51..50730.51 rows=1 width=20)
   ->  Limit  (cost=50438.91..50630.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=50438.91..69599.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 93 [Wed Mar  7 02:35:17 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 94 [Wed Mar  7 02:35:19 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 95 [Wed Mar  7 02:35:21 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 96 [Wed Mar  7 02:35:23 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 97 [Wed Mar  7 02:35:25 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=66947.02..66947.02 rows=1 width=20)
   ->  Limit  (cost=66672.02..66847.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=66672.02..84172.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 98 [Wed Mar  7 02:35:25 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52131.42..52131.42 rows=1 width=20)
   ->  Limit  (cost=51853.41..52031.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=51853.41..69654.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 99 [Wed Mar  7 02:35:26 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50835.56..50835.56 rows=1 width=20)
   ->  Limit  (cost=50545.95..50735.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=50545.95..69506.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 100 [Wed Mar  7 02:35:26 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50730.51..50730.51 rows=1 width=20)
   ->  Limit  (cost=50438.91..50630.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=50438.91..69599.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 101 [Wed Mar  7 02:35:27 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 102 [Wed Mar  7 02:35:28 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 103 [Wed Mar  7 02:35:29 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 104 [Wed Mar  7 02:35:31 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 105 [Wed Mar  7 02:35:32 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=66947.02..66947.02 rows=1 width=20)
   ->  Limit  (cost=66672.02..66847.02 rows=10000 width=20)
         ->  Incremental Sort  (cost=66672.02..84172.24 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 106 [Wed Mar  7 02:35:33 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52131.42..52131.42 rows=1 width=20)
   ->  Limit  (cost=51853.41..52031.42 rows=10000 width=20)
         ->  Incremental Sort  (cost=51853.41..69654.85 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 107 [Wed Mar  7 02:35:33 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50835.56..50835.56 rows=1 width=20)
   ->  Limit  (cost=50545.95..50735.56 rows=10000 width=20)
         ->  Incremental Sort  (cost=50545.95..69506.08 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 108 [Wed Mar  7 02:35:34 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50730.51..50730.51 rows=1 width=20)
   ->  Limit  (cost=50438.91..50630.51 rows=10000 width=20)
         ->  Incremental Sort  (cost=50438.91..69599.31 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 109 [Wed Mar  7 02:35:34 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 110 [Wed Mar  7 02:35:36 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 111 [Wed Mar  7 02:35:37 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 112 [Wed Mar  7 02:35:38 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 113 [Wed Mar  7 02:35:47 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137593.80..137593.80 rows=1 width=20)
   ->  Limit  (cost=137318.70..137493.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=137318.70..154828.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 114 [Wed Mar  7 02:35:48 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.86..136823.86 rows=1 width=20)
   ->  Limit  (cost=136542.31..136723.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.31..154697.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 115 [Wed Mar  7 02:35:50 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 116 [Wed Mar  7 02:35:51 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 117 [Wed Mar  7 02:35:52 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 118 [Wed Mar  7 02:35:54 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 119 [Wed Mar  7 02:35:56 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 120 [Wed Mar  7 02:35:58 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 121 [Wed Mar  7 02:36:00 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137593.80..137593.80 rows=1 width=20)
   ->  Limit  (cost=137318.70..137493.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=137318.70..154828.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 122 [Wed Mar  7 02:36:01 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.86..136823.86 rows=1 width=20)
   ->  Limit  (cost=136542.31..136723.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.31..154697.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 123 [Wed Mar  7 02:36:02 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 124 [Wed Mar  7 02:36:04 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 125 [Wed Mar  7 02:36:05 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 126 [Wed Mar  7 02:36:06 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 127 [Wed Mar  7 02:36:08 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 128 [Wed Mar  7 02:36:10 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 129 [Wed Mar  7 02:36:12 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137593.80..137593.80 rows=1 width=20)
   ->  Limit  (cost=137318.70..137493.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=137318.70..154828.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 130 [Wed Mar  7 02:36:13 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.86..136823.86 rows=1 width=20)
   ->  Limit  (cost=136542.31..136723.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.31..154697.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 131 [Wed Mar  7 02:36:14 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 132 [Wed Mar  7 02:36:15 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 133 [Wed Mar  7 02:36:16 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 134 [Wed Mar  7 02:36:18 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 135 [Wed Mar  7 02:36:20 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 136 [Wed Mar  7 02:36:22 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 137 [Wed Mar  7 02:36:24 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=137593.80..137593.80 rows=1 width=20)
   ->  Limit  (cost=137318.70..137493.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=137318.70..154828.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 138 [Wed Mar  7 02:36:25 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.86..136823.86 rows=1 width=20)
   ->  Limit  (cost=136542.31..136723.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.31..154697.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 139 [Wed Mar  7 02:36:26 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 140 [Wed Mar  7 02:36:28 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 141 [Wed Mar  7 02:36:29 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 142 [Wed Mar  7 02:36:31 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 143 [Wed Mar  7 02:36:33 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 144 [Wed Mar  7 02:36:35 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 145 [Wed Mar  7 02:36:37 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=117083.80..117083.80 rows=1 width=20)
   ->  Limit  (cost=116808.70..116983.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=116808.70..134318.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 146 [Wed Mar  7 02:36:38 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.86..116313.86 rows=1 width=20)
   ->  Limit  (cost=116032.31..116213.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.31..134187.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 147 [Wed Mar  7 02:36:39 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 148 [Wed Mar  7 02:36:41 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 149 [Wed Mar  7 02:36:42 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 150 [Wed Mar  7 02:36:44 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 151 [Wed Mar  7 02:36:46 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 152 [Wed Mar  7 02:36:48 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 153 [Wed Mar  7 02:36:50 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=117083.80..117083.80 rows=1 width=20)
   ->  Limit  (cost=116808.70..116983.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=116808.70..134318.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 154 [Wed Mar  7 02:36:51 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.86..116313.86 rows=1 width=20)
   ->  Limit  (cost=116032.31..116213.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.31..134187.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 155 [Wed Mar  7 02:36:52 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 156 [Wed Mar  7 02:36:53 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 157 [Wed Mar  7 02:36:54 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 158 [Wed Mar  7 02:36:55 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 159 [Wed Mar  7 02:36:57 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 160 [Wed Mar  7 02:36:58 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 161 [Wed Mar  7 02:37:00 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=117083.80..117083.80 rows=1 width=20)
   ->  Limit  (cost=116808.70..116983.80 rows=10000 width=20)
         ->  Incremental Sort  (cost=116808.70..134318.53 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 162 [Wed Mar  7 02:37:00 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.86..116313.86 rows=1 width=20)
   ->  Limit  (cost=116032.31..116213.86 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.31..134187.62 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 163 [Wed Mar  7 02:37:01 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 164 [Wed Mar  7 02:37:02 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 165 [Wed Mar  7 02:37:03 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 166 [Wed Mar  7 02:37:05 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 167 [Wed Mar  7 02:37:06 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 168 [Wed Mar  7 02:37:08 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 169 [Wed Mar  7 02:37:09 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60970.47..60970.47 rows=1 width=20)
   ->  Limit  (cost=60695.27..60870.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=60695.27..78214.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 170 [Wed Mar  7 02:37:10 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.19..59281.19 rows=1 width=20)
   ->  Limit  (cost=58990.26..59181.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.26..78083.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 171 [Wed Mar  7 02:37:10 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 172 [Wed Mar  7 02:37:11 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 173 [Wed Mar  7 02:37:11 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 174 [Wed Mar  7 02:37:13 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 175 [Wed Mar  7 02:37:15 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 176 [Wed Mar  7 02:37:17 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 177 [Wed Mar  7 02:37:19 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60970.47..60970.47 rows=1 width=20)
   ->  Limit  (cost=60695.27..60870.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=60695.27..78214.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 178 [Wed Mar  7 02:37:20 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.19..59281.19 rows=1 width=20)
   ->  Limit  (cost=58990.26..59181.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.26..78083.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 179 [Wed Mar  7 02:37:20 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 180 [Wed Mar  7 02:37:21 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 181 [Wed Mar  7 02:37:21 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 182 [Wed Mar  7 02:37:23 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 183 [Wed Mar  7 02:37:25 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 184 [Wed Mar  7 02:37:27 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 185 [Wed Mar  7 02:37:28 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=60970.47..60970.47 rows=1 width=20)
   ->  Limit  (cost=60695.27..60870.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=60695.27..78214.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 186 [Wed Mar  7 02:37:29 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.19..59281.19 rows=1 width=20)
   ->  Limit  (cost=58990.26..59181.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.26..78083.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 187 [Wed Mar  7 02:37:30 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 188 [Wed Mar  7 02:37:30 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 189 [Wed Mar  7 02:37:31 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 190 [Wed Mar  7 02:37:33 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 191 [Wed Mar  7 02:37:34 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 192 [Wed Mar  7 02:37:36 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 193 [Wed Mar  7 02:37:38 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52423.47..52423.47 rows=1 width=20)
   ->  Limit  (cost=52148.27..52323.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=52148.27..69667.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 194 [Wed Mar  7 02:37:39 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.19..50734.19 rows=1 width=20)
   ->  Limit  (cost=50443.26..50634.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.26..69536.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 195 [Wed Mar  7 02:37:39 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 196 [Wed Mar  7 02:37:40 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 197 [Wed Mar  7 02:37:41 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 198 [Wed Mar  7 02:37:42 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 199 [Wed Mar  7 02:37:44 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 200 [Wed Mar  7 02:37:46 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 201 [Wed Mar  7 02:37:48 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52423.47..52423.47 rows=1 width=20)
   ->  Limit  (cost=52148.27..52323.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=52148.27..69667.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 202 [Wed Mar  7 02:37:49 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.19..50734.19 rows=1 width=20)
   ->  Limit  (cost=50443.26..50634.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.26..69536.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 203 [Wed Mar  7 02:37:49 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 204 [Wed Mar  7 02:37:50 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 205 [Wed Mar  7 02:37:50 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 206 [Wed Mar  7 02:37:52 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 207 [Wed Mar  7 02:37:54 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 208 [Wed Mar  7 02:37:56 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 209 [Wed Mar  7 02:37:58 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52423.47..52423.47 rows=1 width=20)
   ->  Limit  (cost=52148.27..52323.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=52148.27..69667.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 210 [Wed Mar  7 02:37:59 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.19..50734.19 rows=1 width=20)
   ->  Limit  (cost=50443.26..50634.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.26..69536.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 211 [Wed Mar  7 02:37:59 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 212 [Wed Mar  7 02:37:59 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 213 [Wed Mar  7 02:38:00 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 214 [Wed Mar  7 02:38:01 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 215 [Wed Mar  7 02:38:03 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 216 [Wed Mar  7 02:38:04 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 217 [Wed Mar  7 02:38:06 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=52423.47..52423.47 rows=1 width=20)
   ->  Limit  (cost=52148.27..52323.47 rows=10000 width=20)
         ->  Incremental Sort  (cost=52148.27..69667.48 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 218 [Wed Mar  7 02:38:06 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.19..50734.19 rows=1 width=20)
   ->  Limit  (cost=50443.26..50634.19 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.26..69536.57 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 219 [Wed Mar  7 02:38:06 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 220 [Wed Mar  7 02:38:07 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 221 [Wed Mar  7 02:38:07 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 222 [Wed Mar  7 02:38:09 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 223 [Wed Mar  7 02:38:10 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 224 [Wed Mar  7 02:38:11 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 225 [Wed Mar  7 02:38:20 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136880.91..136880.91 rows=1 width=20)
   ->  Limit  (cost=136600.10..136780.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=136600.10..154681.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 226 [Wed Mar  7 02:38:21 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 227 [Wed Mar  7 02:38:23 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 228 [Wed Mar  7 02:38:24 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 229 [Wed Mar  7 02:38:25 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 230 [Wed Mar  7 02:38:27 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 231 [Wed Mar  7 02:38:29 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 232 [Wed Mar  7 02:38:31 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 233 [Wed Mar  7 02:38:33 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136880.91..136880.91 rows=1 width=20)
   ->  Limit  (cost=136600.10..136780.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=136600.10..154681.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 234 [Wed Mar  7 02:38:34 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 235 [Wed Mar  7 02:38:35 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 236 [Wed Mar  7 02:38:36 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 237 [Wed Mar  7 02:38:37 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 238 [Wed Mar  7 02:38:39 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 239 [Wed Mar  7 02:38:41 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 240 [Wed Mar  7 02:38:43 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 241 [Wed Mar  7 02:38:44 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136880.91..136880.91 rows=1 width=20)
   ->  Limit  (cost=136600.10..136780.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=136600.10..154681.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 242 [Wed Mar  7 02:38:45 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 243 [Wed Mar  7 02:38:47 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 244 [Wed Mar  7 02:38:48 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 245 [Wed Mar  7 02:38:49 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 246 [Wed Mar  7 02:38:51 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 247 [Wed Mar  7 02:38:53 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 248 [Wed Mar  7 02:38:54 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 249 [Wed Mar  7 02:38:56 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136880.91..136880.91 rows=1 width=20)
   ->  Limit  (cost=136600.10..136780.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=136600.10..154681.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 250 [Wed Mar  7 02:38:57 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 251 [Wed Mar  7 02:38:59 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 252 [Wed Mar  7 02:39:00 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 253 [Wed Mar  7 02:39:01 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 254 [Wed Mar  7 02:39:03 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 255 [Wed Mar  7 02:39:05 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 256 [Wed Mar  7 02:39:07 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 257 [Wed Mar  7 02:39:09 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116370.91..116370.91 rows=1 width=20)
   ->  Limit  (cost=116090.10..116270.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=116090.10..134171.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 258 [Wed Mar  7 02:39:10 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 259 [Wed Mar  7 02:39:11 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 260 [Wed Mar  7 02:39:13 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 261 [Wed Mar  7 02:39:14 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 262 [Wed Mar  7 02:39:16 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 263 [Wed Mar  7 02:39:18 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 264 [Wed Mar  7 02:39:20 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 265 [Wed Mar  7 02:39:22 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116370.91..116370.91 rows=1 width=20)
   ->  Limit  (cost=116090.10..116270.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=116090.10..134171.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 266 [Wed Mar  7 02:39:23 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 267 [Wed Mar  7 02:39:24 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 268 [Wed Mar  7 02:39:25 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 269 [Wed Mar  7 02:39:26 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 270 [Wed Mar  7 02:39:27 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 271 [Wed Mar  7 02:39:28 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 272 [Wed Mar  7 02:39:30 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 273 [Wed Mar  7 02:39:31 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116370.91..116370.91 rows=1 width=20)
   ->  Limit  (cost=116090.10..116270.91 rows=10000 width=20)
         ->  Incremental Sort  (cost=116090.10..134171.08 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 274 [Wed Mar  7 02:39:32 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 275 [Wed Mar  7 02:39:33 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 276 [Wed Mar  7 02:39:34 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 277 [Wed Mar  7 02:39:35 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 278 [Wed Mar  7 02:39:36 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 279 [Wed Mar  7 02:39:38 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 280 [Wed Mar  7 02:39:39 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 281 [Wed Mar  7 02:39:41 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59422.73..59422.73 rows=1 width=20)
   ->  Limit  (cost=59133.40..59322.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=59133.40..78067.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 282 [Wed Mar  7 02:39:41 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 283 [Wed Mar  7 02:39:41 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 284 [Wed Mar  7 02:39:42 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 285 [Wed Mar  7 02:39:42 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 286 [Wed Mar  7 02:39:44 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 287 [Wed Mar  7 02:39:46 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 288 [Wed Mar  7 02:39:48 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 289 [Wed Mar  7 02:39:50 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59422.73..59422.73 rows=1 width=20)
   ->  Limit  (cost=59133.40..59322.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=59133.40..78067.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 290 [Wed Mar  7 02:39:51 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 291 [Wed Mar  7 02:39:51 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 292 [Wed Mar  7 02:39:52 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 293 [Wed Mar  7 02:39:52 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 294 [Wed Mar  7 02:39:54 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 295 [Wed Mar  7 02:39:56 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 296 [Wed Mar  7 02:39:58 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 297 [Wed Mar  7 02:40:00 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59422.73..59422.73 rows=1 width=20)
   ->  Limit  (cost=59133.40..59322.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=59133.40..78067.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 298 [Wed Mar  7 02:40:00 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 299 [Wed Mar  7 02:40:01 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 300 [Wed Mar  7 02:40:01 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 301 [Wed Mar  7 02:40:02 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 302 [Wed Mar  7 02:40:04 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 303 [Wed Mar  7 02:40:06 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 304 [Wed Mar  7 02:40:07 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 305 [Wed Mar  7 02:40:09 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50875.73..50875.73 rows=1 width=20)
   ->  Limit  (cost=50586.40..50775.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=50586.40..69520.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 306 [Wed Mar  7 02:40:10 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 307 [Wed Mar  7 02:40:10 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 308 [Wed Mar  7 02:40:11 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 309 [Wed Mar  7 02:40:12 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 310 [Wed Mar  7 02:40:13 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 311 [Wed Mar  7 02:40:15 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 312 [Wed Mar  7 02:40:17 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 313 [Wed Mar  7 02:40:19 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50875.73..50875.73 rows=1 width=20)
   ->  Limit  (cost=50586.40..50775.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=50586.40..69520.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 314 [Wed Mar  7 02:40:20 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 315 [Wed Mar  7 02:40:20 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 316 [Wed Mar  7 02:40:20 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 317 [Wed Mar  7 02:40:21 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 318 [Wed Mar  7 02:40:23 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 319 [Wed Mar  7 02:40:25 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 320 [Wed Mar  7 02:40:27 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 321 [Wed Mar  7 02:40:29 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50875.73..50875.73 rows=1 width=20)
   ->  Limit  (cost=50586.40..50775.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=50586.40..69520.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 322 [Wed Mar  7 02:40:29 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 323 [Wed Mar  7 02:40:30 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 324 [Wed Mar  7 02:40:30 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 325 [Wed Mar  7 02:40:31 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 326 [Wed Mar  7 02:40:32 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 327 [Wed Mar  7 02:40:33 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 328 [Wed Mar  7 02:40:35 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 329 [Wed Mar  7 02:40:36 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50875.73..50875.73 rows=1 width=20)
   ->  Limit  (cost=50586.40..50775.73 rows=10000 width=20)
         ->  Incremental Sort  (cost=50586.40..69520.03 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 330 [Wed Mar  7 02:40:36 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 331 [Wed Mar  7 02:40:37 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 332 [Wed Mar  7 02:40:37 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 333 [Wed Mar  7 02:40:38 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 334 [Wed Mar  7 02:40:39 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 335 [Wed Mar  7 02:40:40 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 336 [Wed Mar  7 02:40:42 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 337 [Wed Mar  7 02:40:50 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.96..136823.96 rows=1 width=20)
   ->  Limit  (cost=136542.44..136723.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.44..154694.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 338 [Wed Mar  7 02:40:51 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 339 [Wed Mar  7 02:40:53 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 340 [Wed Mar  7 02:40:54 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 341 [Wed Mar  7 02:40:55 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 342 [Wed Mar  7 02:40:57 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 343 [Wed Mar  7 02:40:59 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 344 [Wed Mar  7 02:41:01 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 345 [Wed Mar  7 02:41:03 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.96..136823.96 rows=1 width=20)
   ->  Limit  (cost=136542.44..136723.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.44..154694.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 346 [Wed Mar  7 02:41:04 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 347 [Wed Mar  7 02:41:05 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 348 [Wed Mar  7 02:41:06 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 349 [Wed Mar  7 02:41:07 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 350 [Wed Mar  7 02:41:09 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 351 [Wed Mar  7 02:41:11 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 352 [Wed Mar  7 02:41:12 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 353 [Wed Mar  7 02:41:14 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.96..136823.96 rows=1 width=20)
   ->  Limit  (cost=136542.44..136723.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.44..154694.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 354 [Wed Mar  7 02:41:15 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 355 [Wed Mar  7 02:41:16 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 356 [Wed Mar  7 02:41:17 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 357 [Wed Mar  7 02:41:19 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 358 [Wed Mar  7 02:41:20 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 359 [Wed Mar  7 02:41:22 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 360 [Wed Mar  7 02:41:24 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 361 [Wed Mar  7 02:41:26 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136823.96..136823.96 rows=1 width=20)
   ->  Limit  (cost=136542.44..136723.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=136542.44..154694.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 362 [Wed Mar  7 02:41:27 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 363 [Wed Mar  7 02:41:28 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 364 [Wed Mar  7 02:41:29 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=136836.04..136836.04 rows=1 width=20)
   ->  Limit  (cost=136538.13..136736.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=136538.13..156328.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 365 [Wed Mar  7 02:41:31 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 366 [Wed Mar  7 02:41:32 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 367 [Wed Mar  7 02:41:34 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 368 [Wed Mar  7 02:41:36 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 369 [Wed Mar  7 02:41:38 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.96..116313.96 rows=1 width=20)
   ->  Limit  (cost=116032.44..116213.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.44..134184.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 370 [Wed Mar  7 02:41:39 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 371 [Wed Mar  7 02:41:41 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 372 [Wed Mar  7 02:41:42 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 373 [Wed Mar  7 02:41:43 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 374 [Wed Mar  7 02:41:45 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 375 [Wed Mar  7 02:41:47 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 376 [Wed Mar  7 02:41:49 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 377 [Wed Mar  7 02:41:51 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.96..116313.96 rows=1 width=20)
   ->  Limit  (cost=116032.44..116213.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.44..134184.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 378 [Wed Mar  7 02:41:52 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 379 [Wed Mar  7 02:41:53 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 380 [Wed Mar  7 02:41:54 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 381 [Wed Mar  7 02:41:55 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 382 [Wed Mar  7 02:41:56 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 383 [Wed Mar  7 02:41:57 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 384 [Wed Mar  7 02:41:59 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 385 [Wed Mar  7 02:42:00 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116313.96..116313.96 rows=1 width=20)
   ->  Limit  (cost=116032.44..116213.96 rows=10000 width=20)
         ->  Incremental Sort  (cost=116032.44..134184.32 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 386 [Wed Mar  7 02:42:01 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 387 [Wed Mar  7 02:42:02 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 388 [Wed Mar  7 02:42:03 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=116326.04..116326.04 rows=1 width=20)
   ->  Limit  (cost=116028.13..116226.04 rows=10000 width=20)
         ->  Incremental Sort  (cost=116028.13..135818.94 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(8 rows)

===== 389 [Wed Mar  7 02:42:04 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 390 [Wed Mar  7 02:42:05 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 391 [Wed Mar  7 02:42:07 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 392 [Wed Mar  7 02:42:08 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 393 [Wed Mar  7 02:42:09 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.53..59281.53 rows=1 width=20)
   ->  Limit  (cost=58990.63..59181.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.63..78080.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 394 [Wed Mar  7 02:42:10 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 395 [Wed Mar  7 02:42:10 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 396 [Wed Mar  7 02:42:11 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 397 [Wed Mar  7 02:42:11 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 398 [Wed Mar  7 02:42:13 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 399 [Wed Mar  7 02:42:15 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 400 [Wed Mar  7 02:42:17 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 401 [Wed Mar  7 02:42:19 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.53..59281.53 rows=1 width=20)
   ->  Limit  (cost=58990.63..59181.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.63..78080.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 402 [Wed Mar  7 02:42:19 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 403 [Wed Mar  7 02:42:20 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 404 [Wed Mar  7 02:42:21 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 405 [Wed Mar  7 02:42:21 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 406 [Wed Mar  7 02:42:23 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 407 [Wed Mar  7 02:42:25 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 408 [Wed Mar  7 02:42:26 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 409 [Wed Mar  7 02:42:28 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59281.53..59281.53 rows=1 width=20)
   ->  Limit  (cost=58990.63..59181.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=58990.63..78080.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 410 [Wed Mar  7 02:42:29 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 411 [Wed Mar  7 02:42:29 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 412 [Wed Mar  7 02:42:30 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=59285.11..59285.11 rows=1 width=20)
   ->  Limit  (cost=58977.74..59185.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=58977.74..79714.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=58976.50..156205.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=57976.48..59018.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 413 [Wed Mar  7 02:42:30 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 414 [Wed Mar  7 02:42:32 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 415 [Wed Mar  7 02:42:34 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 416 [Wed Mar  7 02:42:36 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 417 [Wed Mar  7 02:42:38 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.53..50734.53 rows=1 width=20)
   ->  Limit  (cost=50443.63..50634.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.63..69533.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 418 [Wed Mar  7 02:42:38 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 419 [Wed Mar  7 02:42:39 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 420 [Wed Mar  7 02:42:39 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 421 [Wed Mar  7 02:42:40 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 422 [Wed Mar  7 02:42:42 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 423 [Wed Mar  7 02:42:44 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 424 [Wed Mar  7 02:42:45 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=220601.40..220601.40 rows=1 width=20)
   ->  Limit  (cost=220476.40..220501.40 rows=10000 width=20)
         ->  Sort  (cost=220476.40..222976.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 425 [Wed Mar  7 02:42:47 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.53..50734.53 rows=1 width=20)
   ->  Limit  (cost=50443.63..50634.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.63..69533.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 426 [Wed Mar  7 02:42:48 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 427 [Wed Mar  7 02:42:48 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 428 [Wed Mar  7 02:42:49 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 429 [Wed Mar  7 02:42:49 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 430 [Wed Mar  7 02:42:51 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 431 [Wed Mar  7 02:42:53 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 432 [Wed Mar  7 02:42:55 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 433 [Wed Mar  7 02:42:57 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.53..50734.53 rows=1 width=20)
   ->  Limit  (cost=50443.63..50634.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.63..69533.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 434 [Wed Mar  7 02:42:57 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 435 [Wed Mar  7 02:42:58 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 436 [Wed Mar  7 02:42:58 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 437 [Wed Mar  7 02:42:59 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 438 [Wed Mar  7 02:43:00 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 439 [Wed Mar  7 02:43:01 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 440 [Wed Mar  7 02:43:03 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 441 [Wed Mar  7 02:43:04 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50734.53..50734.53 rows=1 width=20)
   ->  Limit  (cost=50443.63..50634.53 rows=10000 width=20)
         ->  Incremental Sort  (cost=50443.63..69533.27 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_1.a
                           ->  Parallel Seq Scan on s_1  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 442 [Wed Mar  7 02:43:04 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_2.a, s_2.b
                           ->  Parallel Seq Scan on s_2  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 443 [Wed Mar  7 02:43:05 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_3.a, s_3.b, s_3.c
                           ->  Parallel Seq Scan on s_3  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 444 [Wed Mar  7 02:43:05 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=50738.11..50738.11 rows=1 width=20)
   ->  Limit  (cost=50430.74..50638.11 rows=10000 width=20)
         ->  Incremental Sort  (cost=50430.74..71167.89 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Gather Merge  (cost=50429.50..147658.59 rows=833334 width=20)
                     Workers Planned: 2
                     ->  Sort  (cost=49429.48..50471.15 rows=416667 width=20)
                           Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                           ->  Parallel Seq Scan on s_4  (cost=0.00..10536.67 rows=416667 width=20)
(10 rows)

===== 445 [Wed Mar  7 02:43:06 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_1.a
                     ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 446 [Wed Mar  7 02:43:07 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_2.a, s_2.b
                     ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 447 [Wed Mar  7 02:43:08 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c
                     ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 448 [Wed Mar  7 02:43:10 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e LIMIT 10000
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Limit  (cost=200091.40..200091.40 rows=1 width=20)
   ->  Limit  (cost=199966.40..199991.40 rows=10000 width=20)
         ->  Sort  (cost=199966.40..202466.40 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
                     ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

