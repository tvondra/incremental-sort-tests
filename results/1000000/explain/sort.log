===== 1 [Wed Mar  7 02:10:14 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=279419.25..279419.25 rows=1 width=20)
   ->  Incremental Sort  (cost=147027.04..269419.25 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 2 [Wed Mar  7 02:10:17 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 3 [Wed Mar  7 02:10:20 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 4 [Wed Mar  7 02:10:23 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 5 [Wed Mar  7 02:10:26 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 6 [Wed Mar  7 02:10:30 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 7 [Wed Mar  7 02:10:33 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 8 [Wed Mar  7 02:10:38 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 9 [Wed Mar  7 02:10:43 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 10 [Wed Mar  7 02:10:46 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 11 [Wed Mar  7 02:10:49 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 12 [Wed Mar  7 02:10:52 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 13 [Wed Mar  7 02:10:55 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 14 [Wed Mar  7 02:10:58 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 15 [Wed Mar  7 02:11:02 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 16 [Wed Mar  7 02:11:06 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 17 [Wed Mar  7 02:11:11 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 18 [Wed Mar  7 02:11:13 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 19 [Wed Mar  7 02:11:16 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 20 [Wed Mar  7 02:11:19 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 21 [Wed Mar  7 02:11:22 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 22 [Wed Mar  7 02:11:25 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 23 [Wed Mar  7 02:11:29 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 24 [Wed Mar  7 02:11:33 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 25 [Wed Mar  7 02:11:38 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 26 [Wed Mar  7 02:11:41 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 27 [Wed Mar  7 02:11:44 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 28 [Wed Mar  7 02:11:47 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 29 [Wed Mar  7 02:11:50 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 30 [Wed Mar  7 02:11:54 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 31 [Wed Mar  7 02:11:57 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 32 [Wed Mar  7 02:12:02 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 33 [Wed Mar  7 02:12:07 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 34 [Wed Mar  7 02:12:10 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 35 [Wed Mar  7 02:12:13 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 36 [Wed Mar  7 02:12:16 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 37 [Wed Mar  7 02:12:19 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 38 [Wed Mar  7 02:12:23 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 39 [Wed Mar  7 02:12:27 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 40 [Wed Mar  7 02:12:31 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 41 [Wed Mar  7 02:12:36 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 42 [Wed Mar  7 02:12:39 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 43 [Wed Mar  7 02:12:41 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 44 [Wed Mar  7 02:12:43 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 45 [Wed Mar  7 02:12:46 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 46 [Wed Mar  7 02:12:49 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 47 [Wed Mar  7 02:12:52 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 48 [Wed Mar  7 02:12:55 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 49 [Wed Mar  7 02:13:00 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 50 [Wed Mar  7 02:13:02 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 51 [Wed Mar  7 02:13:04 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 52 [Wed Mar  7 02:13:07 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 53 [Wed Mar  7 02:13:09 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 54 [Wed Mar  7 02:13:12 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 55 [Wed Mar  7 02:13:15 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 56 [Wed Mar  7 02:13:19 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 57 [Wed Mar  7 02:13:23 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=279419.25..279419.25 rows=1 width=20)
   ->  Incremental Sort  (cost=147027.04..269419.25 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 58 [Wed Mar  7 02:13:26 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 59 [Wed Mar  7 02:13:29 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 60 [Wed Mar  7 02:13:32 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 61 [Wed Mar  7 02:13:36 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 62 [Wed Mar  7 02:13:39 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 63 [Wed Mar  7 02:13:43 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 64 [Wed Mar  7 02:13:47 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 65 [Wed Mar  7 02:13:52 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 66 [Wed Mar  7 02:13:56 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 67 [Wed Mar  7 02:13:58 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 68 [Wed Mar  7 02:14:01 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 69 [Wed Mar  7 02:14:04 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 70 [Wed Mar  7 02:14:07 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 71 [Wed Mar  7 02:14:11 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 72 [Wed Mar  7 02:14:15 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 73 [Wed Mar  7 02:14:20 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 74 [Wed Mar  7 02:14:23 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 75 [Wed Mar  7 02:14:25 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 76 [Wed Mar  7 02:14:28 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 77 [Wed Mar  7 02:14:31 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 78 [Wed Mar  7 02:14:35 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 79 [Wed Mar  7 02:14:38 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 80 [Wed Mar  7 02:14:43 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 81 [Wed Mar  7 02:14:48 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=258898.75..258898.75 rows=1 width=20)
   ->  Incremental Sort  (cost=145161.54..248898.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 82 [Wed Mar  7 02:14:50 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=241603.79..241603.79 rows=1 width=20)
   ->  Incremental Sort  (cost=137178.86..231603.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 83 [Wed Mar  7 02:14:53 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=224330.83..224330.83 rows=1 width=20)
   ->  Incremental Sort  (cost=136583.12..214330.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 84 [Wed Mar  7 02:14:56 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=207299.87..207299.87 rows=1 width=20)
   ->  Incremental Sort  (cost=136540.78..197299.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 85 [Wed Mar  7 02:14:59 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 86 [Wed Mar  7 02:15:03 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 87 [Wed Mar  7 02:15:07 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 88 [Wed Mar  7 02:15:11 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 89 [Wed Mar  7 02:15:16 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 90 [Wed Mar  7 02:15:19 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 91 [Wed Mar  7 02:15:22 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 92 [Wed Mar  7 02:15:25 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 93 [Wed Mar  7 02:15:28 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 94 [Wed Mar  7 02:15:32 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 95 [Wed Mar  7 02:15:36 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 96 [Wed Mar  7 02:15:40 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 97 [Wed Mar  7 02:15:46 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 98 [Wed Mar  7 02:15:48 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 99 [Wed Mar  7 02:15:50 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 100 [Wed Mar  7 02:15:53 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 101 [Wed Mar  7 02:15:55 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 102 [Wed Mar  7 02:15:58 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 103 [Wed Mar  7 02:16:01 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 104 [Wed Mar  7 02:16:04 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 105 [Wed Mar  7 02:16:09 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=238388.75..238388.75 rows=1 width=20)
   ->  Incremental Sort  (cost=124651.54..228388.75 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 106 [Wed Mar  7 02:16:11 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=221093.79..221093.79 rows=1 width=20)
   ->  Incremental Sort  (cost=116668.86..211093.79 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 107 [Wed Mar  7 02:16:14 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=203820.83..203820.83 rows=1 width=20)
   ->  Incremental Sort  (cost=116073.12..193820.83 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 108 [Wed Mar  7 02:16:16 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=186789.87..186789.87 rows=1 width=20)
   ->  Incremental Sort  (cost=116030.78..176789.87 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 109 [Wed Mar  7 02:16:19 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 110 [Wed Mar  7 02:16:21 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 111 [Wed Mar  7 02:16:24 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 112 [Wed Mar  7 02:16:28 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 113 [Wed Mar  7 02:16:40 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 114 [Wed Mar  7 02:16:42 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 115 [Wed Mar  7 02:16:46 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 116 [Wed Mar  7 02:16:49 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 117 [Wed Mar  7 02:16:51 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 118 [Wed Mar  7 02:16:55 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 119 [Wed Mar  7 02:16:59 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 120 [Wed Mar  7 02:17:04 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 121 [Wed Mar  7 02:17:08 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 122 [Wed Mar  7 02:17:11 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 123 [Wed Mar  7 02:17:14 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 124 [Wed Mar  7 02:17:16 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 125 [Wed Mar  7 02:17:18 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 126 [Wed Mar  7 02:17:22 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 127 [Wed Mar  7 02:17:26 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 128 [Wed Mar  7 02:17:31 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 129 [Wed Mar  7 02:17:34 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 130 [Wed Mar  7 02:17:37 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 131 [Wed Mar  7 02:17:40 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 132 [Wed Mar  7 02:17:43 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 133 [Wed Mar  7 02:17:45 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 134 [Wed Mar  7 02:17:49 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 135 [Wed Mar  7 02:17:53 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 136 [Wed Mar  7 02:17:57 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 137 [Wed Mar  7 02:18:01 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 138 [Wed Mar  7 02:18:04 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 139 [Wed Mar  7 02:18:07 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 140 [Wed Mar  7 02:18:10 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 141 [Wed Mar  7 02:18:12 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 142 [Wed Mar  7 02:18:16 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 143 [Wed Mar  7 02:18:21 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 144 [Wed Mar  7 02:18:25 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 145 [Wed Mar  7 02:18:29 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 146 [Wed Mar  7 02:18:32 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 147 [Wed Mar  7 02:18:35 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 148 [Wed Mar  7 02:18:38 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 149 [Wed Mar  7 02:18:41 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 150 [Wed Mar  7 02:18:45 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 151 [Wed Mar  7 02:18:49 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 152 [Wed Mar  7 02:18:54 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 153 [Wed Mar  7 02:18:58 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 154 [Wed Mar  7 02:19:00 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 155 [Wed Mar  7 02:19:03 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 156 [Wed Mar  7 02:19:05 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 157 [Wed Mar  7 02:19:07 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 158 [Wed Mar  7 02:19:10 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 159 [Wed Mar  7 02:19:14 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 160 [Wed Mar  7 02:19:18 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 161 [Wed Mar  7 02:19:21 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 162 [Wed Mar  7 02:19:23 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 163 [Wed Mar  7 02:19:26 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 164 [Wed Mar  7 02:19:28 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 165 [Wed Mar  7 02:19:30 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 166 [Wed Mar  7 02:19:33 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 167 [Wed Mar  7 02:19:36 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 168 [Wed Mar  7 02:19:40 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 169 [Wed Mar  7 02:19:43 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 170 [Wed Mar  7 02:19:46 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 171 [Wed Mar  7 02:19:49 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 172 [Wed Mar  7 02:19:52 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 173 [Wed Mar  7 02:19:54 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 174 [Wed Mar  7 02:19:58 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 175 [Wed Mar  7 02:20:03 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 176 [Wed Mar  7 02:20:07 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 177 [Wed Mar  7 02:20:11 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 178 [Wed Mar  7 02:20:14 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 179 [Wed Mar  7 02:20:17 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 180 [Wed Mar  7 02:20:20 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 181 [Wed Mar  7 02:20:22 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 182 [Wed Mar  7 02:20:25 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 183 [Wed Mar  7 02:20:30 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 184 [Wed Mar  7 02:20:34 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 185 [Wed Mar  7 02:20:38 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 186 [Wed Mar  7 02:20:40 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 187 [Wed Mar  7 02:20:43 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 188 [Wed Mar  7 02:20:46 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 189 [Wed Mar  7 02:20:48 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 190 [Wed Mar  7 02:20:52 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 191 [Wed Mar  7 02:20:56 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 192 [Wed Mar  7 02:21:01 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 193 [Wed Mar  7 02:21:05 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=242906.65..242906.65 rows=1 width=20)
   ->  Incremental Sort  (cost=137318.70..232906.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 194 [Wed Mar  7 02:21:07 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209817.59..209817.59 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.31..199817.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 195 [Wed Mar  7 02:21:11 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 196 [Wed Mar  7 02:21:13 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 197 [Wed Mar  7 02:21:16 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 198 [Wed Mar  7 02:21:20 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 199 [Wed Mar  7 02:21:24 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 200 [Wed Mar  7 02:21:29 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 201 [Wed Mar  7 02:21:33 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 202 [Wed Mar  7 02:21:36 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 203 [Wed Mar  7 02:21:39 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 204 [Wed Mar  7 02:21:42 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 205 [Wed Mar  7 02:21:44 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 206 [Wed Mar  7 02:21:48 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 207 [Wed Mar  7 02:21:53 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 208 [Wed Mar  7 02:21:57 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 209 [Wed Mar  7 02:22:01 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 210 [Wed Mar  7 02:22:04 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 211 [Wed Mar  7 02:22:06 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 212 [Wed Mar  7 02:22:09 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 213 [Wed Mar  7 02:22:11 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 214 [Wed Mar  7 02:22:14 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 215 [Wed Mar  7 02:22:17 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 216 [Wed Mar  7 02:22:21 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 217 [Wed Mar  7 02:22:24 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=222396.65..222396.65 rows=1 width=20)
   ->  Incremental Sort  (cost=116808.70..212396.65 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 218 [Wed Mar  7 02:22:26 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189307.59..189307.59 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.31..179307.59 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 219 [Wed Mar  7 02:22:29 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 220 [Wed Mar  7 02:22:31 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 221 [Wed Mar  7 02:22:33 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 222 [Wed Mar  7 02:22:36 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 223 [Wed Mar  7 02:22:40 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 224 [Wed Mar  7 02:22:43 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 225 [Wed Mar  7 02:22:54 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 226 [Wed Mar  7 02:22:57 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 227 [Wed Mar  7 02:22:59 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 228 [Wed Mar  7 02:23:02 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 229 [Wed Mar  7 02:23:04 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 230 [Wed Mar  7 02:23:08 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 231 [Wed Mar  7 02:23:12 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 232 [Wed Mar  7 02:23:16 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 233 [Wed Mar  7 02:23:19 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 234 [Wed Mar  7 02:23:22 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 235 [Wed Mar  7 02:23:24 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 236 [Wed Mar  7 02:23:26 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 237 [Wed Mar  7 02:23:28 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 238 [Wed Mar  7 02:23:32 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 239 [Wed Mar  7 02:23:36 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 240 [Wed Mar  7 02:23:39 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 241 [Wed Mar  7 02:23:42 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 242 [Wed Mar  7 02:23:45 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 243 [Wed Mar  7 02:23:48 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 244 [Wed Mar  7 02:23:50 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 245 [Wed Mar  7 02:23:52 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 246 [Wed Mar  7 02:23:56 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 247 [Wed Mar  7 02:24:00 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 248 [Wed Mar  7 02:24:03 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 249 [Wed Mar  7 02:24:06 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 250 [Wed Mar  7 02:24:09 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 251 [Wed Mar  7 02:24:11 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 252 [Wed Mar  7 02:24:14 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 253 [Wed Mar  7 02:24:16 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 254 [Wed Mar  7 02:24:20 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 255 [Wed Mar  7 02:24:24 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 256 [Wed Mar  7 02:24:27 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 257 [Wed Mar  7 02:24:30 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 258 [Wed Mar  7 02:24:34 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 259 [Wed Mar  7 02:24:36 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 260 [Wed Mar  7 02:24:39 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 261 [Wed Mar  7 02:24:41 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 262 [Wed Mar  7 02:24:45 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 263 [Wed Mar  7 02:24:49 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 264 [Wed Mar  7 02:24:53 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 265 [Wed Mar  7 02:24:56 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 266 [Wed Mar  7 02:24:58 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 267 [Wed Mar  7 02:25:00 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 268 [Wed Mar  7 02:25:02 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 269 [Wed Mar  7 02:25:04 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 270 [Wed Mar  7 02:25:07 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 271 [Wed Mar  7 02:25:10 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 272 [Wed Mar  7 02:25:13 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 273 [Wed Mar  7 02:25:15 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 274 [Wed Mar  7 02:25:17 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 275 [Wed Mar  7 02:25:19 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 276 [Wed Mar  7 02:25:21 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 277 [Wed Mar  7 02:25:23 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 278 [Wed Mar  7 02:25:26 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 279 [Wed Mar  7 02:25:29 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 280 [Wed Mar  7 02:25:31 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 281 [Wed Mar  7 02:25:33 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 282 [Wed Mar  7 02:25:37 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 283 [Wed Mar  7 02:25:39 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 284 [Wed Mar  7 02:25:41 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 285 [Wed Mar  7 02:25:44 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 286 [Wed Mar  7 02:25:48 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 287 [Wed Mar  7 02:25:52 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 288 [Wed Mar  7 02:25:55 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 289 [Wed Mar  7 02:25:58 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 290 [Wed Mar  7 02:26:01 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 291 [Wed Mar  7 02:26:04 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 292 [Wed Mar  7 02:26:06 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 293 [Wed Mar  7 02:26:08 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 294 [Wed Mar  7 02:26:12 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 295 [Wed Mar  7 02:26:16 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 296 [Wed Mar  7 02:26:19 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 297 [Wed Mar  7 02:26:22 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 298 [Wed Mar  7 02:26:25 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 299 [Wed Mar  7 02:26:27 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 300 [Wed Mar  7 02:26:29 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 301 [Wed Mar  7 02:26:31 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 302 [Wed Mar  7 02:26:35 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 303 [Wed Mar  7 02:26:39 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 304 [Wed Mar  7 02:26:43 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 305 [Wed Mar  7 02:26:45 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=226379.57..226379.57 rows=1 width=20)
   ->  Incremental Sort  (cost=136600.10..216379.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 306 [Wed Mar  7 02:26:48 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 307 [Wed Mar  7 02:26:51 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 308 [Wed Mar  7 02:26:53 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 309 [Wed Mar  7 02:26:55 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 310 [Wed Mar  7 02:27:00 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 311 [Wed Mar  7 02:27:04 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 312 [Wed Mar  7 02:27:07 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 313 [Wed Mar  7 02:27:10 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 314 [Wed Mar  7 02:27:13 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 315 [Wed Mar  7 02:27:16 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 316 [Wed Mar  7 02:27:18 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 317 [Wed Mar  7 02:27:20 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 318 [Wed Mar  7 02:27:25 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 319 [Wed Mar  7 02:27:29 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 320 [Wed Mar  7 02:27:32 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 321 [Wed Mar  7 02:27:35 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 322 [Wed Mar  7 02:27:38 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 323 [Wed Mar  7 02:27:40 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 324 [Wed Mar  7 02:27:42 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 325 [Wed Mar  7 02:27:43 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 326 [Wed Mar  7 02:27:47 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 327 [Wed Mar  7 02:27:50 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 328 [Wed Mar  7 02:27:52 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 329 [Wed Mar  7 02:27:54 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=205869.57..205869.57 rows=1 width=20)
   ->  Incremental Sort  (cost=116090.10..195869.57 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 330 [Wed Mar  7 02:27:57 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 331 [Wed Mar  7 02:27:59 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 332 [Wed Mar  7 02:28:01 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 333 [Wed Mar  7 02:28:02 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 334 [Wed Mar  7 02:28:06 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 335 [Wed Mar  7 02:28:09 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 336 [Wed Mar  7 02:28:11 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 337 [Wed Mar  7 02:28:20 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 338 [Wed Mar  7 02:28:23 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 339 [Wed Mar  7 02:28:25 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 340 [Wed Mar  7 02:28:27 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 341 [Wed Mar  7 02:28:30 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 342 [Wed Mar  7 02:28:34 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 343 [Wed Mar  7 02:28:37 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 344 [Wed Mar  7 02:28:40 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 345 [Wed Mar  7 02:28:43 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 346 [Wed Mar  7 02:28:46 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 347 [Wed Mar  7 02:28:48 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 348 [Wed Mar  7 02:28:50 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 349 [Wed Mar  7 02:28:52 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 350 [Wed Mar  7 02:28:55 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 351 [Wed Mar  7 02:28:58 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 352 [Wed Mar  7 02:29:01 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 353 [Wed Mar  7 02:29:04 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 354 [Wed Mar  7 02:29:06 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 355 [Wed Mar  7 02:29:08 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 356 [Wed Mar  7 02:29:10 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 357 [Wed Mar  7 02:29:13 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 358 [Wed Mar  7 02:29:16 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 359 [Wed Mar  7 02:29:20 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 360 [Wed Mar  7 02:29:22 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 361 [Wed Mar  7 02:29:25 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 362 [Wed Mar  7 02:29:28 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 363 [Wed Mar  7 02:29:30 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 364 [Wed Mar  7 02:29:32 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 365 [Wed Mar  7 02:29:34 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 366 [Wed Mar  7 02:29:38 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 367 [Wed Mar  7 02:29:42 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 368 [Wed Mar  7 02:29:44 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 369 [Wed Mar  7 02:29:47 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 370 [Wed Mar  7 02:29:50 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 371 [Wed Mar  7 02:29:52 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 372 [Wed Mar  7 02:29:54 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 373 [Wed Mar  7 02:29:57 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 374 [Wed Mar  7 02:30:01 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 375 [Wed Mar  7 02:30:04 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 376 [Wed Mar  7 02:30:07 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 377 [Wed Mar  7 02:30:10 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 378 [Wed Mar  7 02:30:12 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 379 [Wed Mar  7 02:30:14 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 380 [Wed Mar  7 02:30:15 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 381 [Wed Mar  7 02:30:17 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 382 [Wed Mar  7 02:30:20 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 383 [Wed Mar  7 02:30:23 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 384 [Wed Mar  7 02:30:24 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 385 [Wed Mar  7 02:30:26 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 386 [Wed Mar  7 02:30:28 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 387 [Wed Mar  7 02:30:30 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 388 [Wed Mar  7 02:30:32 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 389 [Wed Mar  7 02:30:33 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 390 [Wed Mar  7 02:30:36 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 391 [Wed Mar  7 02:30:39 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 392 [Wed Mar  7 02:30:41 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 393 [Wed Mar  7 02:30:42 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 394 [Wed Mar  7 02:30:45 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 395 [Wed Mar  7 02:30:47 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 396 [Wed Mar  7 02:30:50 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 397 [Wed Mar  7 02:30:52 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 398 [Wed Mar  7 02:30:56 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 399 [Wed Mar  7 02:30:59 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 400 [Wed Mar  7 02:31:02 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 401 [Wed Mar  7 02:31:05 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 402 [Wed Mar  7 02:31:08 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 403 [Wed Mar  7 02:31:10 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 404 [Wed Mar  7 02:31:12 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 405 [Wed Mar  7 02:31:14 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 406 [Wed Mar  7 02:31:18 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 407 [Wed Mar  7 02:31:21 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 408 [Wed Mar  7 02:31:23 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 409 [Wed Mar  7 02:31:26 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 410 [Wed Mar  7 02:31:29 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 411 [Wed Mar  7 02:31:31 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 412 [Wed Mar  7 02:31:33 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 413 [Wed Mar  7 02:31:35 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 414 [Wed Mar  7 02:31:39 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 415 [Wed Mar  7 02:31:42 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 416 [Wed Mar  7 02:31:44 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 417 [Wed Mar  7 02:31:47 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=209958.53..209958.53 rows=1 width=20)
   ->  Incremental Sort  (cost=136542.42..199958.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 418 [Wed Mar  7 02:31:50 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 419 [Wed Mar  7 02:31:52 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 420 [Wed Mar  7 02:31:54 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=195147.48..195147.48 rows=1 width=20)
   ->  Incremental Sort  (cost=136538.13..185147.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 421 [Wed Mar  7 02:31:56 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 422 [Wed Mar  7 02:32:00 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 423 [Wed Mar  7 02:32:04 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 424 [Wed Mar  7 02:32:06 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=281705.69..281705.69 rows=1 width=20)
   ->  Sort  (cost=269205.69..271705.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 425 [Wed Mar  7 02:32:09 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 426 [Wed Mar  7 02:32:12 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 427 [Wed Mar  7 02:32:14 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 428 [Wed Mar  7 02:32:17 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 429 [Wed Mar  7 02:32:19 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 430 [Wed Mar  7 02:32:23 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 431 [Wed Mar  7 02:32:26 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 432 [Wed Mar  7 02:32:29 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 433 [Wed Mar  7 02:32:32 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 434 [Wed Mar  7 02:32:34 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 435 [Wed Mar  7 02:32:36 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 436 [Wed Mar  7 02:32:38 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 437 [Wed Mar  7 02:32:39 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 438 [Wed Mar  7 02:32:42 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 439 [Wed Mar  7 02:32:45 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 440 [Wed Mar  7 02:32:47 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 441 [Wed Mar  7 02:32:48 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=189448.53..189448.53 rows=1 width=20)
   ->  Incremental Sort  (cost=116032.42..179448.53 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 442 [Wed Mar  7 02:32:51 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 443 [Wed Mar  7 02:32:52 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 444 [Wed Mar  7 02:32:54 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=174637.48..174637.48 rows=1 width=20)
   ->  Incremental Sort  (cost=116028.13..164637.48 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(7 rows)

===== 445 [Wed Mar  7 02:32:55 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_1 ORDER BY a) foo ORDER BY a, b
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_1.a
               ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 446 [Wed Mar  7 02:32:59 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_2 ORDER BY a, b) foo ORDER BY a, b, c
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_2.a, s_2.b
               ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 447 [Wed Mar  7 02:33:01 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_3 ORDER BY a, b, c) foo ORDER BY a, b, c, d
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c
               ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

===== 448 [Wed Mar  7 02:33:03 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM (SELECT * FROM s_4 ORDER BY a, b, c, d) foo ORDER BY a, b, c, d, e
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Limit  (cost=240685.69..240685.69 rows=1 width=20)
   ->  Sort  (cost=228185.69..230685.69 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(6 rows)

