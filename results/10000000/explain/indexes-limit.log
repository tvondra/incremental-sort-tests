===== 1 [Wed Mar  7 12:56:45 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=140767.28..140767.28 rows=1 width=20)
   ->  Limit  (cost=138017.28..139767.28 rows=100000 width=20)
         ->  Incremental Sort  (cost=138017.28..313018.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 2 [Wed Mar  7 12:56:46 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 3 [Wed Mar  7 12:56:47 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 4 [Wed Mar  7 12:56:47 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 5 [Wed Mar  7 12:56:47 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 6 [Wed Mar  7 12:57:11 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 7 [Wed Mar  7 12:57:37 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 8 [Wed Mar  7 12:58:06 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 9 [Wed Mar  7 12:58:43 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 10 [Wed Mar  7 12:58:44 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 11 [Wed Mar  7 12:58:44 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 12 [Wed Mar  7 12:58:45 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 13 [Wed Mar  7 12:58:45 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 14 [Wed Mar  7 12:59:06 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 15 [Wed Mar  7 12:59:29 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 16 [Wed Mar  7 12:59:56 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 17 [Wed Mar  7 13:00:29 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 18 [Wed Mar  7 13:00:31 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 19 [Wed Mar  7 13:00:31 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 20 [Wed Mar  7 13:00:31 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 21 [Wed Mar  7 13:00:31 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 22 [Wed Mar  7 13:00:49 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 23 [Wed Mar  7 13:01:08 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 24 [Wed Mar  7 13:01:31 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 25 [Wed Mar  7 13:02:01 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 26 [Wed Mar  7 13:02:02 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 27 [Wed Mar  7 13:02:02 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 28 [Wed Mar  7 13:02:03 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 29 [Wed Mar  7 13:02:03 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 30 [Wed Mar  7 13:02:10 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 31 [Wed Mar  7 13:02:16 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 32 [Wed Mar  7 13:02:23 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 33 [Wed Mar  7 13:02:29 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 34 [Wed Mar  7 13:02:30 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 35 [Wed Mar  7 13:02:31 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 36 [Wed Mar  7 13:02:31 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 37 [Wed Mar  7 13:02:31 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 38 [Wed Mar  7 13:02:38 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 39 [Wed Mar  7 13:02:44 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 40 [Wed Mar  7 13:02:51 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 41 [Wed Mar  7 13:02:57 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 42 [Wed Mar  7 13:02:58 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 43 [Wed Mar  7 13:02:59 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 44 [Wed Mar  7 13:02:59 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 45 [Wed Mar  7 13:02:59 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 46 [Wed Mar  7 13:03:06 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 47 [Wed Mar  7 13:03:13 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 48 [Wed Mar  7 13:03:19 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 49 [Wed Mar  7 13:03:26 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 50 [Wed Mar  7 13:03:27 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 51 [Wed Mar  7 13:03:27 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 52 [Wed Mar  7 13:03:27 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 53 [Wed Mar  7 13:03:28 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 54 [Wed Mar  7 13:03:34 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 55 [Wed Mar  7 13:03:41 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 56 [Wed Mar  7 13:03:47 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 57 [Wed Mar  7 13:03:54 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=140767.28..140767.28 rows=1 width=20)
   ->  Limit  (cost=138017.28..139767.28 rows=100000 width=20)
         ->  Incremental Sort  (cost=138017.28..313018.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 58 [Wed Mar  7 13:03:55 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 59 [Wed Mar  7 13:03:55 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 60 [Wed Mar  7 13:03:56 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 61 [Wed Mar  7 13:03:56 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 62 [Wed Mar  7 13:04:05 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 63 [Wed Mar  7 13:04:14 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 64 [Wed Mar  7 13:04:24 CET 2018] scale:10000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 65 [Wed Mar  7 13:04:36 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 66 [Wed Mar  7 13:04:37 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 67 [Wed Mar  7 13:04:37 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 68 [Wed Mar  7 13:04:37 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 69 [Wed Mar  7 13:04:38 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 70 [Wed Mar  7 13:04:45 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 71 [Wed Mar  7 13:04:53 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 72 [Wed Mar  7 13:05:02 CET 2018] scale:10000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 73 [Wed Mar  7 13:05:13 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 74 [Wed Mar  7 13:05:14 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 75 [Wed Mar  7 13:05:15 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 76 [Wed Mar  7 13:05:15 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 77 [Wed Mar  7 13:05:15 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 78 [Wed Mar  7 13:05:23 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 79 [Wed Mar  7 13:05:30 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 80 [Wed Mar  7 13:05:39 CET 2018] scale:10000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 81 [Wed Mar  7 13:05:50 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 82 [Wed Mar  7 13:05:51 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 83 [Wed Mar  7 13:05:52 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 84 [Wed Mar  7 13:05:52 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 85 [Wed Mar  7 13:05:52 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 86 [Wed Mar  7 13:05:55 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 87 [Wed Mar  7 13:05:58 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 88 [Wed Mar  7 13:06:01 CET 2018] scale:10000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 89 [Wed Mar  7 13:06:04 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 90 [Wed Mar  7 13:06:05 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 91 [Wed Mar  7 13:06:05 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 92 [Wed Mar  7 13:06:05 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 93 [Wed Mar  7 13:06:06 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 94 [Wed Mar  7 13:06:09 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 95 [Wed Mar  7 13:06:11 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 96 [Wed Mar  7 13:06:14 CET 2018] scale:10000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 97 [Wed Mar  7 13:06:17 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 98 [Wed Mar  7 13:06:18 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 99 [Wed Mar  7 13:06:19 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 100 [Wed Mar  7 13:06:19 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 101 [Wed Mar  7 13:06:19 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 102 [Wed Mar  7 13:06:22 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 103 [Wed Mar  7 13:06:25 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 104 [Wed Mar  7 13:06:28 CET 2018] scale:10000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 105 [Wed Mar  7 13:06:31 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=112193.49..112193.49 rows=1 width=20)
   ->  Limit  (cost=109443.49..111193.49 rows=100000 width=20)
         ->  Incremental Sort  (cost=109443.49..284444.65 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 106 [Wed Mar  7 13:06:32 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=12885.10..12885.10 rows=1 width=20)
   ->  Limit  (cost=10113.84..11885.10 rows=100000 width=20)
         ->  Incremental Sort  (cost=10113.84..187240.95 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 107 [Wed Mar  7 13:06:32 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3674.73..3674.73 rows=1 width=20)
   ->  Limit  (cost=823.19..2674.73 rows=100000 width=20)
         ->  Incremental Sort  (cost=823.19..185978.79 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 108 [Wed Mar  7 13:06:32 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=2907.93..2907.93 rows=1 width=20)
   ->  Limit  (cost=63.42..1907.93 rows=100000 width=20)
         ->  Incremental Sort  (cost=63.42..184513.29 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 109 [Wed Mar  7 13:06:33 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 110 [Wed Mar  7 13:06:35 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 111 [Wed Mar  7 13:06:38 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 112 [Wed Mar  7 13:06:41 CET 2018] scale:10000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 113 [Wed Mar  7 13:08:04 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=16202.69..16202.69 rows=1 width=20)
   ->  Limit  (cost=13451.32..15202.69 rows=100000 width=20)
         ->  Incremental Sort  (cost=13451.32..188588.72 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 114 [Wed Mar  7 13:08:04 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 115 [Wed Mar  7 13:08:05 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 116 [Wed Mar  7 13:08:05 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 117 [Wed Mar  7 13:08:05 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 118 [Wed Mar  7 13:08:32 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 119 [Wed Mar  7 13:09:07 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 120 [Wed Mar  7 13:09:47 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 121 [Wed Mar  7 13:10:22 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 122 [Wed Mar  7 13:10:23 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 123 [Wed Mar  7 13:10:23 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 124 [Wed Mar  7 13:10:23 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 125 [Wed Mar  7 13:10:24 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 126 [Wed Mar  7 13:10:49 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 127 [Wed Mar  7 13:11:20 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 128 [Wed Mar  7 13:11:56 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 129 [Wed Mar  7 13:12:28 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 130 [Wed Mar  7 13:12:29 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 131 [Wed Mar  7 13:12:29 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 132 [Wed Mar  7 13:12:29 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 133 [Wed Mar  7 13:12:29 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 134 [Wed Mar  7 13:12:51 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 135 [Wed Mar  7 13:13:19 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 136 [Wed Mar  7 13:13:51 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 137 [Wed Mar  7 13:14:19 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 138 [Wed Mar  7 13:14:20 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 139 [Wed Mar  7 13:14:20 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 140 [Wed Mar  7 13:14:20 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 141 [Wed Mar  7 13:14:20 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 142 [Wed Mar  7 13:14:27 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 143 [Wed Mar  7 13:14:33 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 144 [Wed Mar  7 13:14:40 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 145 [Wed Mar  7 13:14:46 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 146 [Wed Mar  7 13:14:46 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 147 [Wed Mar  7 13:14:47 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 148 [Wed Mar  7 13:14:47 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 149 [Wed Mar  7 13:14:47 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 150 [Wed Mar  7 13:14:54 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 151 [Wed Mar  7 13:15:00 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 152 [Wed Mar  7 13:15:06 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 153 [Wed Mar  7 13:15:13 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 154 [Wed Mar  7 13:15:13 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 155 [Wed Mar  7 13:15:14 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 156 [Wed Mar  7 13:15:14 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 157 [Wed Mar  7 13:15:14 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 158 [Wed Mar  7 13:15:21 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 159 [Wed Mar  7 13:15:27 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 160 [Wed Mar  7 13:15:33 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 161 [Wed Mar  7 13:15:40 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 162 [Wed Mar  7 13:15:40 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 163 [Wed Mar  7 13:15:40 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 164 [Wed Mar  7 13:15:41 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 165 [Wed Mar  7 13:15:41 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 166 [Wed Mar  7 13:15:47 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 167 [Wed Mar  7 13:15:54 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 168 [Wed Mar  7 13:16:00 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 169 [Wed Mar  7 13:16:06 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=16202.69..16202.69 rows=1 width=20)
   ->  Limit  (cost=13451.32..15202.69 rows=100000 width=20)
         ->  Incremental Sort  (cost=13451.32..188588.72 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 170 [Wed Mar  7 13:16:07 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 171 [Wed Mar  7 13:16:07 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 172 [Wed Mar  7 13:16:08 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 173 [Wed Mar  7 13:16:08 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 174 [Wed Mar  7 13:16:18 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 175 [Wed Mar  7 13:16:29 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 176 [Wed Mar  7 13:16:41 CET 2018] scale:10000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 177 [Wed Mar  7 13:16:53 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 178 [Wed Mar  7 13:16:53 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 179 [Wed Mar  7 13:16:53 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 180 [Wed Mar  7 13:16:54 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 181 [Wed Mar  7 13:16:54 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 182 [Wed Mar  7 13:17:03 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 183 [Wed Mar  7 13:17:13 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 184 [Wed Mar  7 13:17:24 CET 2018] scale:10000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 185 [Wed Mar  7 13:17:34 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 186 [Wed Mar  7 13:17:35 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 187 [Wed Mar  7 13:17:35 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 188 [Wed Mar  7 13:17:35 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 189 [Wed Mar  7 13:17:35 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 190 [Wed Mar  7 13:17:44 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 191 [Wed Mar  7 13:17:54 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 192 [Wed Mar  7 13:18:05 CET 2018] scale:10000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 193 [Wed Mar  7 13:18:14 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 194 [Wed Mar  7 13:18:15 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 195 [Wed Mar  7 13:18:15 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 196 [Wed Mar  7 13:18:16 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 197 [Wed Mar  7 13:18:16 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 198 [Wed Mar  7 13:18:19 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 199 [Wed Mar  7 13:18:21 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 200 [Wed Mar  7 13:18:24 CET 2018] scale:10000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 201 [Wed Mar  7 13:18:27 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 202 [Wed Mar  7 13:18:27 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 203 [Wed Mar  7 13:18:27 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 204 [Wed Mar  7 13:18:28 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 205 [Wed Mar  7 13:18:28 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 206 [Wed Mar  7 13:18:31 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 207 [Wed Mar  7 13:18:33 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 208 [Wed Mar  7 13:18:36 CET 2018] scale:10000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 209 [Wed Mar  7 13:18:39 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 210 [Wed Mar  7 13:18:39 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 211 [Wed Mar  7 13:18:40 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 212 [Wed Mar  7 13:18:40 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 213 [Wed Mar  7 13:18:40 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 214 [Wed Mar  7 13:18:43 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 215 [Wed Mar  7 13:18:45 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 216 [Wed Mar  7 13:18:48 CET 2018] scale:10000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 217 [Wed Mar  7 13:18:51 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=14168.98..14168.98 rows=1 width=20)
   ->  Limit  (cost=11417.82..13168.98 rows=100000 width=20)
         ->  Incremental Sort  (cost=11417.82..186534.90 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 218 [Wed Mar  7 13:18:51 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=2930.58..2930.58 rows=1 width=20)
   ->  Limit  (cost=89.04..1930.58 rows=100000 width=20)
         ->  Incremental Sort  (cost=89.04..184241.78 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 219 [Wed Mar  7 13:18:52 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 220 [Wed Mar  7 13:18:52 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 221 [Wed Mar  7 13:18:52 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 222 [Wed Mar  7 13:18:55 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 223 [Wed Mar  7 13:18:58 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 224 [Wed Mar  7 13:19:00 CET 2018] scale:10000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 225 [Wed Mar  7 13:20:22 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 226 [Wed Mar  7 13:20:23 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 227 [Wed Mar  7 13:20:23 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 228 [Wed Mar  7 13:20:23 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 229 [Wed Mar  7 13:20:23 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 230 [Wed Mar  7 13:20:55 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 231 [Wed Mar  7 13:21:29 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 232 [Wed Mar  7 13:21:57 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 233 [Wed Mar  7 13:22:17 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 234 [Wed Mar  7 13:22:17 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 235 [Wed Mar  7 13:22:18 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 236 [Wed Mar  7 13:22:18 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 237 [Wed Mar  7 13:22:18 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 238 [Wed Mar  7 13:22:47 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 239 [Wed Mar  7 13:23:17 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 240 [Wed Mar  7 13:23:41 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 241 [Wed Mar  7 13:23:57 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 242 [Wed Mar  7 13:23:57 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 243 [Wed Mar  7 13:23:57 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 244 [Wed Mar  7 13:23:58 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 245 [Wed Mar  7 13:23:58 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 246 [Wed Mar  7 13:24:23 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 247 [Wed Mar  7 13:24:50 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 248 [Wed Mar  7 13:25:09 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 249 [Wed Mar  7 13:25:21 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 250 [Wed Mar  7 13:25:21 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 251 [Wed Mar  7 13:25:22 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 252 [Wed Mar  7 13:25:22 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 253 [Wed Mar  7 13:25:22 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 254 [Wed Mar  7 13:25:28 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 255 [Wed Mar  7 13:25:35 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 256 [Wed Mar  7 13:25:41 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 257 [Wed Mar  7 13:25:47 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 258 [Wed Mar  7 13:25:47 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 259 [Wed Mar  7 13:25:48 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 260 [Wed Mar  7 13:25:48 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 261 [Wed Mar  7 13:25:48 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 262 [Wed Mar  7 13:25:54 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 263 [Wed Mar  7 13:26:01 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 264 [Wed Mar  7 13:26:07 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 265 [Wed Mar  7 13:26:13 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 266 [Wed Mar  7 13:26:14 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 267 [Wed Mar  7 13:26:14 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 268 [Wed Mar  7 13:26:14 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 269 [Wed Mar  7 13:26:14 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 270 [Wed Mar  7 13:26:20 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 271 [Wed Mar  7 13:26:27 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 272 [Wed Mar  7 13:26:33 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 273 [Wed Mar  7 13:26:39 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 274 [Wed Mar  7 13:26:40 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 275 [Wed Mar  7 13:26:40 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 276 [Wed Mar  7 13:26:40 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 277 [Wed Mar  7 13:26:40 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 278 [Wed Mar  7 13:26:47 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 279 [Wed Mar  7 13:26:53 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 280 [Wed Mar  7 13:26:59 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 281 [Wed Mar  7 13:27:05 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 282 [Wed Mar  7 13:27:06 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 283 [Wed Mar  7 13:27:06 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 284 [Wed Mar  7 13:27:06 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 285 [Wed Mar  7 13:27:06 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 286 [Wed Mar  7 13:27:17 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 287 [Wed Mar  7 13:27:28 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 288 [Wed Mar  7 13:27:37 CET 2018] scale:10000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 289 [Wed Mar  7 13:27:43 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 290 [Wed Mar  7 13:27:43 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 291 [Wed Mar  7 13:27:43 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 292 [Wed Mar  7 13:27:44 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 293 [Wed Mar  7 13:27:44 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 294 [Wed Mar  7 13:27:53 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 295 [Wed Mar  7 13:28:03 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 296 [Wed Mar  7 13:28:10 CET 2018] scale:10000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 297 [Wed Mar  7 13:28:15 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 298 [Wed Mar  7 13:28:15 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 299 [Wed Mar  7 13:28:15 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 300 [Wed Mar  7 13:28:15 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 301 [Wed Mar  7 13:28:16 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 302 [Wed Mar  7 13:28:25 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 303 [Wed Mar  7 13:28:34 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 304 [Wed Mar  7 13:28:41 CET 2018] scale:10000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 305 [Wed Mar  7 13:28:45 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 306 [Wed Mar  7 13:28:46 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 307 [Wed Mar  7 13:28:46 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 308 [Wed Mar  7 13:28:46 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 309 [Wed Mar  7 13:28:46 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 310 [Wed Mar  7 13:28:49 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 311 [Wed Mar  7 13:28:51 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 312 [Wed Mar  7 13:28:54 CET 2018] scale:10000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 313 [Wed Mar  7 13:28:57 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 314 [Wed Mar  7 13:28:57 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 315 [Wed Mar  7 13:28:57 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 316 [Wed Mar  7 13:28:58 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 317 [Wed Mar  7 13:28:58 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 318 [Wed Mar  7 13:29:00 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 319 [Wed Mar  7 13:29:03 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 320 [Wed Mar  7 13:29:06 CET 2018] scale:10000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 321 [Wed Mar  7 13:29:08 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 322 [Wed Mar  7 13:29:09 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 323 [Wed Mar  7 13:29:09 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 324 [Wed Mar  7 13:29:09 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 325 [Wed Mar  7 13:29:09 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 326 [Wed Mar  7 13:29:12 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 327 [Wed Mar  7 13:29:14 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 328 [Wed Mar  7 13:29:17 CET 2018] scale:10000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 329 [Wed Mar  7 13:29:20 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Limit  (cost=3826.25..3826.25 rows=1 width=20)
   ->  Limit  (cost=987.14..2826.25 rows=100000 width=20)
         ->  Incremental Sort  (cost=987.14..184896.39 rows=9999939 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323385.52 rows=9999939 width=20)
(6 rows)

===== 330 [Wed Mar  7 13:29:20 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200732.27 rows=10000054 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406985.62 rows=10000054 width=20)
(6 rows)

===== 331 [Wed Mar  7 13:29:20 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 332 [Wed Mar  7 13:29:20 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201173.43 rows=9999939 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451319.90 rows=9999939 width=20)
(6 rows)

===== 333 [Wed Mar  7 13:29:21 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 334 [Wed Mar  7 13:29:23 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 335 [Wed Mar  7 13:29:26 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 336 [Wed Mar  7 13:29:28 CET 2018] scale:10000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 337 [Wed Mar  7 13:30:49 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 338 [Wed Mar  7 13:30:49 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 339 [Wed Mar  7 13:30:50 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 340 [Wed Mar  7 13:30:50 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 341 [Wed Mar  7 13:30:50 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 342 [Wed Mar  7 13:31:23 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1737769.69..1737769.69 rows=1 width=20)
   ->  Limit  (cost=1736519.69..1736769.69 rows=100000 width=20)
         ->  Sort  (cost=1736519.69..1761519.54 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 343 [Wed Mar  7 13:31:51 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 344 [Wed Mar  7 13:32:10 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1737792.04..1737792.04 rows=1 width=20)
   ->  Limit  (cost=1736542.04..1736792.04 rows=100000 width=20)
         ->  Sort  (cost=1736542.04..1761542.18 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 345 [Wed Mar  7 13:32:29 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 346 [Wed Mar  7 13:32:30 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 347 [Wed Mar  7 13:32:30 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 348 [Wed Mar  7 13:32:30 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 349 [Wed Mar  7 13:32:30 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 350 [Wed Mar  7 13:33:00 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 351 [Wed Mar  7 13:33:24 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 352 [Wed Mar  7 13:33:39 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 353 [Wed Mar  7 13:33:54 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 354 [Wed Mar  7 13:33:54 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 355 [Wed Mar  7 13:33:54 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 356 [Wed Mar  7 13:33:55 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 357 [Wed Mar  7 13:33:55 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 358 [Wed Mar  7 13:34:20 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 359 [Wed Mar  7 13:34:40 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 360 [Wed Mar  7 13:34:51 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 361 [Wed Mar  7 13:35:02 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 362 [Wed Mar  7 13:35:02 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 363 [Wed Mar  7 13:35:02 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 364 [Wed Mar  7 13:35:02 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 365 [Wed Mar  7 13:35:03 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 366 [Wed Mar  7 13:35:09 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 367 [Wed Mar  7 13:35:15 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 368 [Wed Mar  7 13:35:21 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 369 [Wed Mar  7 13:35:27 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 370 [Wed Mar  7 13:35:28 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 371 [Wed Mar  7 13:35:28 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 372 [Wed Mar  7 13:35:28 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 373 [Wed Mar  7 13:35:28 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 374 [Wed Mar  7 13:35:35 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 375 [Wed Mar  7 13:35:41 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 376 [Wed Mar  7 13:35:47 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 377 [Wed Mar  7 13:35:53 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 378 [Wed Mar  7 13:35:53 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 379 [Wed Mar  7 13:35:54 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 380 [Wed Mar  7 13:35:54 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 381 [Wed Mar  7 13:35:54 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 382 [Wed Mar  7 13:36:00 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 383 [Wed Mar  7 13:36:06 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 384 [Wed Mar  7 13:36:13 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 385 [Wed Mar  7 13:36:19 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 386 [Wed Mar  7 13:36:19 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 387 [Wed Mar  7 13:36:19 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 388 [Wed Mar  7 13:36:20 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 389 [Wed Mar  7 13:36:20 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               ->  Seq Scan on s_1  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 390 [Wed Mar  7 13:36:26 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Limit  (cost=1045421.04..1045421.04 rows=1 width=20)
   ->  Limit  (cost=1044171.04..1044421.04 rows=100000 width=20)
         ->  Sort  (cost=1044171.04..1069170.89 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               ->  Seq Scan on s_2  (cost=0.00..163694.39 rows=9999939 width=20)
(5 rows)

===== 391 [Wed Mar  7 13:36:32 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               ->  Seq Scan on s_3  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 392 [Wed Mar  7 13:36:38 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=1045432.32..1045432.32 rows=1 width=20)
   ->  Limit  (cost=1044182.32..1044432.32 rows=100000 width=20)
         ->  Sort  (cost=1044182.32..1069182.45 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               ->  Seq Scan on s_4  (cost=0.00..163695.54 rows=10000054 width=20)
(5 rows)

===== 393 [Wed Mar  7 13:36:45 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 394 [Wed Mar  7 13:36:45 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 395 [Wed Mar  7 13:36:45 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 396 [Wed Mar  7 13:36:45 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 397 [Wed Mar  7 13:36:46 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 398 [Wed Mar  7 13:36:56 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748058.54..748058.54 rows=1 width=20)
   ->  Limit  (cost=735391.06..747058.54 rows=100000 width=20)
         ->  Gather Merge  (cost=735391.06..1707675.17 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734391.04..744807.64 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 399 [Wed Mar  7 13:37:05 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 400 [Wed Mar  7 13:37:11 CET 2018] scale:10000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=748071.64..748071.64 rows=1 width=20)
   ->  Limit  (cost=735404.16..747071.64 rows=100000 width=20)
         ->  Gather Merge  (cost=735404.16..1707699.48 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=734404.14..744820.86 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 401 [Wed Mar  7 13:37:17 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 402 [Wed Mar  7 13:37:17 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 403 [Wed Mar  7 13:37:17 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 404 [Wed Mar  7 13:37:17 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 405 [Wed Mar  7 13:37:17 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 406 [Wed Mar  7 13:37:27 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 407 [Wed Mar  7 13:37:34 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 408 [Wed Mar  7 13:37:38 CET 2018] scale:10000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 409 [Wed Mar  7 13:37:43 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 410 [Wed Mar  7 13:37:43 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 411 [Wed Mar  7 13:37:43 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 412 [Wed Mar  7 13:37:44 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 413 [Wed Mar  7 13:37:44 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 414 [Wed Mar  7 13:37:53 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 415 [Wed Mar  7 13:37:59 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 416 [Wed Mar  7 13:38:04 CET 2018] scale:10000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 417 [Wed Mar  7 13:38:08 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 418 [Wed Mar  7 13:38:08 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 419 [Wed Mar  7 13:38:08 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 420 [Wed Mar  7 13:38:08 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 421 [Wed Mar  7 13:38:09 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 422 [Wed Mar  7 13:38:11 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 423 [Wed Mar  7 13:38:14 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 424 [Wed Mar  7 13:38:16 CET 2018] scale:10000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 425 [Wed Mar  7 13:38:19 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 426 [Wed Mar  7 13:38:19 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 427 [Wed Mar  7 13:38:19 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 428 [Wed Mar  7 13:38:19 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 429 [Wed Mar  7 13:38:20 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 430 [Wed Mar  7 13:38:22 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 431 [Wed Mar  7 13:38:25 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 432 [Wed Mar  7 13:38:27 CET 2018] scale:10000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 433 [Wed Mar  7 13:38:30 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 434 [Wed Mar  7 13:38:30 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 435 [Wed Mar  7 13:38:30 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 436 [Wed Mar  7 13:38:31 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 437 [Wed Mar  7 13:38:31 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 438 [Wed Mar  7 13:38:33 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 439 [Wed Mar  7 13:38:36 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 440 [Wed Mar  7 13:38:38 CET 2018] scale:10000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 441 [Wed Mar  7 13:38:41 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=2921.07..2921.07 rows=1 width=20)
   ->  Limit  (cost=87.50..1921.07 rows=100000 width=20)
         ->  Incremental Sort  (cost=87.50..183446.14 rows=10000054 width=20)
               Sort Key: s_1.a, s_1.b
               Presorted Key: s_1.a
               ->  Index Scan using s_1_a_idx on s_1  (cost=0.43..323387.25 rows=10000054 width=20)
(6 rows)

===== 442 [Wed Mar  7 13:38:41 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Limit  (cost=3008.31..3008.31 rows=1 width=20)
   ->  Limit  (cost=1.01..2008.31 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.01..200730.07 rows=9999939 width=20)
               Sort Key: s_2.a, s_2.b, s_2.c
               Presorted Key: s_2.a, s_2.b
               ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.43..406983.90 rows=9999939 width=20)
(6 rows)

===== 443 [Wed Mar  7 13:38:42 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
               Presorted Key: s_3.a, s_3.b, s_3.c
               ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 444 [Wed Mar  7 13:38:42 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Limit  (cost=3012.79..3012.79 rows=1 width=20)
   ->  Limit  (cost=1.05..2012.79 rows=100000 width=20)
         ->  Incremental Sort  (cost=1.05..201175.63 rows=10000054 width=20)
               Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
               Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
               ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.43..451321.62 rows=10000054 width=20)
(6 rows)

===== 445 [Wed Mar  7 13:38:42 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_1.a, s_1.b
                     ->  Parallel Seq Scan on s_1  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 446 [Wed Mar  7 13:38:44 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485894.17..485894.17 rows=1 width=20)
   ->  Limit  (cost=473226.69..484894.17 rows=100000 width=20)
         ->  Gather Merge  (cost=473226.69..1445510.80 rows=8333282 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472226.66..482643.26 rows=4166641 width=20)
                     Sort Key: s_2.a, s_2.b, s_2.c
                     ->  Parallel Seq Scan on s_2  (cost=0.00..105361.41 rows=4166641 width=20)
(7 rows)

===== 447 [Wed Mar  7 13:38:47 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
                     ->  Parallel Seq Scan on s_3  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

===== 448 [Wed Mar  7 13:38:50 CET 2018] scale:10000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e LIMIT 100000
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=485898.87..485898.87 rows=1 width=20)
   ->  Limit  (cost=473231.39..484898.87 rows=100000 width=20)
         ->  Gather Merge  (cost=473231.39..1445526.71 rows=8333378 width=20)
               Workers Planned: 2
               ->  Sort  (cost=472231.37..482648.09 rows=4166689 width=20)
                     Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
                     ->  Parallel Seq Scan on s_4  (cost=0.00..105361.89 rows=4166689 width=20)
(7 rows)

