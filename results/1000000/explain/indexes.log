===== 1 [Wed Mar  7 02:43:19 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 2 [Wed Mar  7 02:43:21 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 3 [Wed Mar  7 02:43:23 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 4 [Wed Mar  7 02:43:25 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 5 [Wed Mar  7 02:43:27 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 6 [Wed Mar  7 02:43:30 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 7 [Wed Mar  7 02:43:32 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 8 [Wed Mar  7 02:43:35 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 9 [Wed Mar  7 02:43:39 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 10 [Wed Mar  7 02:43:41 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 11 [Wed Mar  7 02:43:43 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 12 [Wed Mar  7 02:43:45 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 13 [Wed Mar  7 02:43:48 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 14 [Wed Mar  7 02:43:50 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 15 [Wed Mar  7 02:43:52 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 16 [Wed Mar  7 02:43:55 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 17 [Wed Mar  7 02:43:59 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 18 [Wed Mar  7 02:44:01 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 19 [Wed Mar  7 02:44:03 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 20 [Wed Mar  7 02:44:05 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 21 [Wed Mar  7 02:44:07 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 22 [Wed Mar  7 02:44:09 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 23 [Wed Mar  7 02:44:12 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 24 [Wed Mar  7 02:44:15 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 25 [Wed Mar  7 02:44:18 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 26 [Wed Mar  7 02:44:21 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 27 [Wed Mar  7 02:44:23 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 28 [Wed Mar  7 02:44:25 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 29 [Wed Mar  7 02:44:27 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 30 [Wed Mar  7 02:44:29 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 31 [Wed Mar  7 02:44:32 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 32 [Wed Mar  7 02:44:35 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 33 [Wed Mar  7 02:44:39 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 34 [Wed Mar  7 02:44:41 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 35 [Wed Mar  7 02:44:44 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 36 [Wed Mar  7 02:44:46 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 37 [Wed Mar  7 02:44:48 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 38 [Wed Mar  7 02:44:51 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 39 [Wed Mar  7 02:44:53 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 40 [Wed Mar  7 02:44:57 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 41 [Wed Mar  7 02:45:01 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 42 [Wed Mar  7 02:45:03 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 43 [Wed Mar  7 02:45:05 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 44 [Wed Mar  7 02:45:07 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 45 [Wed Mar  7 02:45:09 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 46 [Wed Mar  7 02:45:11 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 47 [Wed Mar  7 02:45:14 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 48 [Wed Mar  7 02:45:16 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 49 [Wed Mar  7 02:45:20 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 50 [Wed Mar  7 02:45:22 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 51 [Wed Mar  7 02:45:24 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 52 [Wed Mar  7 02:45:26 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 53 [Wed Mar  7 02:45:28 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 54 [Wed Mar  7 02:45:30 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 55 [Wed Mar  7 02:45:33 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 56 [Wed Mar  7 02:45:35 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 57 [Wed Mar  7 02:45:39 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 58 [Wed Mar  7 02:45:41 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 59 [Wed Mar  7 02:45:43 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 60 [Wed Mar  7 02:45:45 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 61 [Wed Mar  7 02:45:47 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 62 [Wed Mar  7 02:45:49 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 63 [Wed Mar  7 02:45:52 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 64 [Wed Mar  7 02:45:55 CET 2018] scale:1000000 groups:10 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 65 [Wed Mar  7 02:45:58 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 66 [Wed Mar  7 02:46:01 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 67 [Wed Mar  7 02:46:03 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 68 [Wed Mar  7 02:46:05 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 69 [Wed Mar  7 02:46:07 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 70 [Wed Mar  7 02:46:09 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 71 [Wed Mar  7 02:46:12 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 72 [Wed Mar  7 02:46:15 CET 2018] scale:1000000 groups:10 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 73 [Wed Mar  7 02:46:18 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 74 [Wed Mar  7 02:46:21 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 75 [Wed Mar  7 02:46:22 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 76 [Wed Mar  7 02:46:24 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 77 [Wed Mar  7 02:46:27 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 78 [Wed Mar  7 02:46:29 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 79 [Wed Mar  7 02:46:31 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 80 [Wed Mar  7 02:46:34 CET 2018] scale:1000000 groups:10 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 81 [Wed Mar  7 02:46:38 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=142214.33..142214.33 rows=1 width=20)
   ->  Incremental Sort  (cost=10428.94..132214.33 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 82 [Wed Mar  7 02:46:40 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=133278.68..133278.68 rows=1 width=20)
   ->  Incremental Sort  (cost=874.61..123278.68 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 83 [Wed Mar  7 02:46:42 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 84 [Wed Mar  7 02:46:44 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 85 [Wed Mar  7 02:46:47 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 86 [Wed Mar  7 02:46:49 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 87 [Wed Mar  7 02:46:52 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 88 [Wed Mar  7 02:46:55 CET 2018] scale:1000000 groups:10 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 89 [Wed Mar  7 02:46:59 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 90 [Wed Mar  7 02:47:01 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 91 [Wed Mar  7 02:47:04 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 92 [Wed Mar  7 02:47:06 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 93 [Wed Mar  7 02:47:08 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 94 [Wed Mar  7 02:47:10 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 95 [Wed Mar  7 02:47:13 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 96 [Wed Mar  7 02:47:16 CET 2018] scale:1000000 groups:10 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 97 [Wed Mar  7 02:47:20 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 98 [Wed Mar  7 02:47:22 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 99 [Wed Mar  7 02:47:25 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 100 [Wed Mar  7 02:47:27 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 101 [Wed Mar  7 02:47:29 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 102 [Wed Mar  7 02:47:31 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 103 [Wed Mar  7 02:47:33 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 104 [Wed Mar  7 02:47:36 CET 2018] scale:1000000 groups:10 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 105 [Wed Mar  7 02:47:40 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 106 [Wed Mar  7 02:47:42 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 107 [Wed Mar  7 02:47:44 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=120437.73..120437.73 rows=1 width=20)
   ->  Incremental Sort  (cost=70.23..110437.73 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 108 [Wed Mar  7 02:47:46 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=103406.77..103406.77 rows=1 width=20)
   ->  Incremental Sort  (cost=5.59..93406.77 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 109 [Wed Mar  7 02:47:48 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 110 [Wed Mar  7 02:47:50 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 111 [Wed Mar  7 02:47:52 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 112 [Wed Mar  7 02:47:55 CET 2018] scale:1000000 groups:10 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 113 [Wed Mar  7 02:48:07 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 114 [Wed Mar  7 02:48:09 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 115 [Wed Mar  7 02:48:11 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 116 [Wed Mar  7 02:48:13 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 117 [Wed Mar  7 02:48:15 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 118 [Wed Mar  7 02:48:17 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 119 [Wed Mar  7 02:48:20 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 120 [Wed Mar  7 02:48:24 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 121 [Wed Mar  7 02:48:26 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 122 [Wed Mar  7 02:48:28 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 123 [Wed Mar  7 02:48:31 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 124 [Wed Mar  7 02:48:33 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 125 [Wed Mar  7 02:48:34 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 126 [Wed Mar  7 02:48:36 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 127 [Wed Mar  7 02:48:40 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 128 [Wed Mar  7 02:48:43 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 129 [Wed Mar  7 02:48:45 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 130 [Wed Mar  7 02:48:47 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 131 [Wed Mar  7 02:48:49 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 132 [Wed Mar  7 02:48:51 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 133 [Wed Mar  7 02:48:53 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 134 [Wed Mar  7 02:48:55 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 135 [Wed Mar  7 02:48:59 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 136 [Wed Mar  7 02:49:02 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 137 [Wed Mar  7 02:49:04 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 138 [Wed Mar  7 02:49:06 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 139 [Wed Mar  7 02:49:09 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 140 [Wed Mar  7 02:49:11 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 141 [Wed Mar  7 02:49:12 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 142 [Wed Mar  7 02:49:15 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 143 [Wed Mar  7 02:49:18 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 144 [Wed Mar  7 02:49:21 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 145 [Wed Mar  7 02:49:24 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 146 [Wed Mar  7 02:49:26 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 147 [Wed Mar  7 02:49:28 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 148 [Wed Mar  7 02:49:30 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 149 [Wed Mar  7 02:49:32 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 150 [Wed Mar  7 02:49:34 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 151 [Wed Mar  7 02:49:38 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 152 [Wed Mar  7 02:49:41 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 153 [Wed Mar  7 02:49:44 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 154 [Wed Mar  7 02:49:46 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 155 [Wed Mar  7 02:49:49 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 156 [Wed Mar  7 02:49:50 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 157 [Wed Mar  7 02:49:52 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 158 [Wed Mar  7 02:49:54 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 159 [Wed Mar  7 02:49:57 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 160 [Wed Mar  7 02:50:00 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 161 [Wed Mar  7 02:50:02 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 162 [Wed Mar  7 02:50:04 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 163 [Wed Mar  7 02:50:07 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 164 [Wed Mar  7 02:50:08 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 165 [Wed Mar  7 02:50:10 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 166 [Wed Mar  7 02:50:12 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 167 [Wed Mar  7 02:50:15 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 168 [Wed Mar  7 02:50:18 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 169 [Wed Mar  7 02:50:20 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 170 [Wed Mar  7 02:50:22 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 171 [Wed Mar  7 02:50:25 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 172 [Wed Mar  7 02:50:26 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 173 [Wed Mar  7 02:50:28 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 174 [Wed Mar  7 02:50:30 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 175 [Wed Mar  7 02:50:34 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 176 [Wed Mar  7 02:50:37 CET 2018] scale:1000000 groups:100 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 177 [Wed Mar  7 02:50:39 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 178 [Wed Mar  7 02:50:42 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 179 [Wed Mar  7 02:50:44 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 180 [Wed Mar  7 02:50:46 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 181 [Wed Mar  7 02:50:47 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 182 [Wed Mar  7 02:50:49 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 183 [Wed Mar  7 02:50:53 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 184 [Wed Mar  7 02:50:56 CET 2018] scale:1000000 groups:100 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 185 [Wed Mar  7 02:50:58 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 186 [Wed Mar  7 02:51:00 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 187 [Wed Mar  7 02:51:03 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 188 [Wed Mar  7 02:51:05 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 189 [Wed Mar  7 02:51:06 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 190 [Wed Mar  7 02:51:08 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 191 [Wed Mar  7 02:51:12 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 192 [Wed Mar  7 02:51:15 CET 2018] scale:1000000 groups:100 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 193 [Wed Mar  7 02:51:17 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 194 [Wed Mar  7 02:51:20 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 195 [Wed Mar  7 02:51:22 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 196 [Wed Mar  7 02:51:24 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 197 [Wed Mar  7 02:51:25 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 198 [Wed Mar  7 02:51:28 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 199 [Wed Mar  7 02:51:31 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 200 [Wed Mar  7 02:51:34 CET 2018] scale:1000000 groups:100 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 201 [Wed Mar  7 02:51:37 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 202 [Wed Mar  7 02:51:39 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 203 [Wed Mar  7 02:51:42 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 204 [Wed Mar  7 02:51:43 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 205 [Wed Mar  7 02:51:45 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 206 [Wed Mar  7 02:51:48 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 207 [Wed Mar  7 02:51:51 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 208 [Wed Mar  7 02:51:54 CET 2018] scale:1000000 groups:100 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 209 [Wed Mar  7 02:51:57 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 210 [Wed Mar  7 02:51:59 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 211 [Wed Mar  7 02:52:02 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 212 [Wed Mar  7 02:52:04 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 213 [Wed Mar  7 02:52:05 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 214 [Wed Mar  7 02:52:07 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 215 [Wed Mar  7 02:52:10 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 216 [Wed Mar  7 02:52:13 CET 2018] scale:1000000 groups:100 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 217 [Wed Mar  7 02:52:15 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=126222.23..126222.23 rows=1 width=20)
   ->  Incremental Sort  (cost=977.85..116222.23 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 218 [Wed Mar  7 02:52:17 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=101492.49..101492.49 rows=1 width=20)
   ->  Incremental Sort  (cost=7.66..91492.49 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 219 [Wed Mar  7 02:52:20 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 220 [Wed Mar  7 02:52:22 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 221 [Wed Mar  7 02:52:23 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 222 [Wed Mar  7 02:52:25 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 223 [Wed Mar  7 02:52:28 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 224 [Wed Mar  7 02:52:31 CET 2018] scale:1000000 groups:100 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 225 [Wed Mar  7 02:52:42 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 226 [Wed Mar  7 02:52:44 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 227 [Wed Mar  7 02:52:46 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 228 [Wed Mar  7 02:52:47 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 229 [Wed Mar  7 02:52:48 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 230 [Wed Mar  7 02:52:51 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 231 [Wed Mar  7 02:52:54 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 232 [Wed Mar  7 02:52:56 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 233 [Wed Mar  7 02:52:58 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 234 [Wed Mar  7 02:53:00 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 235 [Wed Mar  7 02:53:02 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 236 [Wed Mar  7 02:53:03 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 237 [Wed Mar  7 02:53:04 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 238 [Wed Mar  7 02:53:07 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 239 [Wed Mar  7 02:53:10 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 240 [Wed Mar  7 02:53:12 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 241 [Wed Mar  7 02:53:13 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 242 [Wed Mar  7 02:53:16 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 243 [Wed Mar  7 02:53:17 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 244 [Wed Mar  7 02:53:19 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 245 [Wed Mar  7 02:53:20 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 246 [Wed Mar  7 02:53:23 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 247 [Wed Mar  7 02:53:25 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 248 [Wed Mar  7 02:53:28 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 249 [Wed Mar  7 02:53:29 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 250 [Wed Mar  7 02:53:31 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 251 [Wed Mar  7 02:53:33 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 252 [Wed Mar  7 02:53:34 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 253 [Wed Mar  7 02:53:36 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 254 [Wed Mar  7 02:53:39 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 255 [Wed Mar  7 02:53:42 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 256 [Wed Mar  7 02:53:44 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 257 [Wed Mar  7 02:53:45 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 258 [Wed Mar  7 02:53:48 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 259 [Wed Mar  7 02:53:49 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 260 [Wed Mar  7 02:53:51 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 261 [Wed Mar  7 02:53:52 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 262 [Wed Mar  7 02:53:55 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 263 [Wed Mar  7 02:53:58 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 264 [Wed Mar  7 02:54:00 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 265 [Wed Mar  7 02:54:02 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 266 [Wed Mar  7 02:54:05 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 267 [Wed Mar  7 02:54:06 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 268 [Wed Mar  7 02:54:07 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 269 [Wed Mar  7 02:54:09 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 270 [Wed Mar  7 02:54:11 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 271 [Wed Mar  7 02:54:14 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 272 [Wed Mar  7 02:54:15 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 273 [Wed Mar  7 02:54:17 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 274 [Wed Mar  7 02:54:19 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 275 [Wed Mar  7 02:54:21 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 276 [Wed Mar  7 02:54:22 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 277 [Wed Mar  7 02:54:23 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 278 [Wed Mar  7 02:54:26 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 279 [Wed Mar  7 02:54:28 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 280 [Wed Mar  7 02:54:30 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 281 [Wed Mar  7 02:54:32 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 282 [Wed Mar  7 02:54:34 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 283 [Wed Mar  7 02:54:36 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 284 [Wed Mar  7 02:54:37 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 285 [Wed Mar  7 02:54:38 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 286 [Wed Mar  7 02:54:41 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 287 [Wed Mar  7 02:54:44 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 288 [Wed Mar  7 02:54:46 CET 2018] scale:1000000 groups:1000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 289 [Wed Mar  7 02:54:48 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 290 [Wed Mar  7 02:54:50 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 291 [Wed Mar  7 02:54:52 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 292 [Wed Mar  7 02:54:53 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 293 [Wed Mar  7 02:54:54 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 294 [Wed Mar  7 02:54:57 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 295 [Wed Mar  7 02:55:00 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 296 [Wed Mar  7 02:55:02 CET 2018] scale:1000000 groups:1000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 297 [Wed Mar  7 02:55:03 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 298 [Wed Mar  7 02:55:06 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 299 [Wed Mar  7 02:55:07 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 300 [Wed Mar  7 02:55:08 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 301 [Wed Mar  7 02:55:10 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 302 [Wed Mar  7 02:55:13 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 303 [Wed Mar  7 02:55:15 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 304 [Wed Mar  7 02:55:17 CET 2018] scale:1000000 groups:1000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 305 [Wed Mar  7 02:55:19 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 306 [Wed Mar  7 02:55:21 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 307 [Wed Mar  7 02:55:23 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 308 [Wed Mar  7 02:55:24 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 309 [Wed Mar  7 02:55:26 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 310 [Wed Mar  7 02:55:29 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 311 [Wed Mar  7 02:55:32 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 312 [Wed Mar  7 02:55:34 CET 2018] scale:1000000 groups:1000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 313 [Wed Mar  7 02:55:35 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 314 [Wed Mar  7 02:55:38 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 315 [Wed Mar  7 02:55:39 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 316 [Wed Mar  7 02:55:41 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 317 [Wed Mar  7 02:55:42 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 318 [Wed Mar  7 02:55:45 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 319 [Wed Mar  7 02:55:48 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 320 [Wed Mar  7 02:55:50 CET 2018] scale:1000000 groups:1000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 321 [Wed Mar  7 02:55:52 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 322 [Wed Mar  7 02:55:54 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 323 [Wed Mar  7 02:55:56 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 324 [Wed Mar  7 02:55:57 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 325 [Wed Mar  7 02:55:59 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 326 [Wed Mar  7 02:56:01 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 327 [Wed Mar  7 02:56:04 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 328 [Wed Mar  7 02:56:05 CET 2018] scale:1000000 groups:1000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 329 [Wed Mar  7 02:56:07 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=109695.16..109695.16 rows=1 width=20)
   ->  Incremental Sort  (cost=82.52..99695.16 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 330 [Wed Mar  7 02:56:09 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 331 [Wed Mar  7 02:56:11 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 332 [Wed Mar  7 02:56:12 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 333 [Wed Mar  7 02:56:13 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 334 [Wed Mar  7 02:56:16 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 335 [Wed Mar  7 02:56:18 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 336 [Wed Mar  7 02:56:20 CET 2018] scale:1000000 groups:1000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 337 [Wed Mar  7 02:56:29 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 338 [Wed Mar  7 02:56:32 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 339 [Wed Mar  7 02:56:33 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 340 [Wed Mar  7 02:56:34 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 341 [Wed Mar  7 02:56:35 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 342 [Wed Mar  7 02:56:38 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 343 [Wed Mar  7 02:56:40 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 344 [Wed Mar  7 02:56:42 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 345 [Wed Mar  7 02:56:43 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 346 [Wed Mar  7 02:56:45 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 347 [Wed Mar  7 02:56:47 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 348 [Wed Mar  7 02:56:48 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 349 [Wed Mar  7 02:56:49 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 350 [Wed Mar  7 02:56:52 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 351 [Wed Mar  7 02:56:54 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 352 [Wed Mar  7 02:56:55 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 353 [Wed Mar  7 02:56:57 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 354 [Wed Mar  7 02:56:59 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 355 [Wed Mar  7 02:57:00 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 356 [Wed Mar  7 02:57:01 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 357 [Wed Mar  7 02:57:02 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 358 [Wed Mar  7 02:57:05 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 359 [Wed Mar  7 02:57:07 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 360 [Wed Mar  7 02:57:09 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 361 [Wed Mar  7 02:57:10 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 362 [Wed Mar  7 02:57:12 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 363 [Wed Mar  7 02:57:14 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 364 [Wed Mar  7 02:57:15 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 365 [Wed Mar  7 02:57:16 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 366 [Wed Mar  7 02:57:19 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 367 [Wed Mar  7 02:57:21 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 368 [Wed Mar  7 02:57:23 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 369 [Wed Mar  7 02:57:24 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 370 [Wed Mar  7 02:57:26 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 371 [Wed Mar  7 02:57:28 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 372 [Wed Mar  7 02:57:29 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 373 [Wed Mar  7 02:57:30 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 374 [Wed Mar  7 02:57:33 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 375 [Wed Mar  7 02:57:35 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 376 [Wed Mar  7 02:57:37 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 377 [Wed Mar  7 02:57:39 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 378 [Wed Mar  7 02:57:41 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 379 [Wed Mar  7 02:57:42 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 380 [Wed Mar  7 02:57:43 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 381 [Wed Mar  7 02:57:44 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 382 [Wed Mar  7 02:57:47 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 383 [Wed Mar  7 02:57:49 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 384 [Wed Mar  7 02:57:50 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 385 [Wed Mar  7 02:57:51 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 386 [Wed Mar  7 02:57:53 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 387 [Wed Mar  7 02:57:54 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 388 [Wed Mar  7 02:57:55 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 389 [Wed Mar  7 02:57:56 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 390 [Wed Mar  7 02:57:59 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 391 [Wed Mar  7 02:58:01 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 392 [Wed Mar  7 02:58:02 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:0 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 393 [Wed Mar  7 02:58:03 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 394 [Wed Mar  7 02:58:05 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 395 [Wed Mar  7 02:58:06 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 396 [Wed Mar  7 02:58:07 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 397 [Wed Mar  7 02:58:09 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 398 [Wed Mar  7 02:58:11 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 399 [Wed Mar  7 02:58:13 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 400 [Wed Mar  7 02:58:15 CET 2018] scale:1000000 groups:10000 work_mem:4MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 401 [Wed Mar  7 02:58:17 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 402 [Wed Mar  7 02:58:19 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 403 [Wed Mar  7 02:58:20 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 404 [Wed Mar  7 02:58:21 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 405 [Wed Mar  7 02:58:22 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 406 [Wed Mar  7 02:58:25 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 407 [Wed Mar  7 02:58:27 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 408 [Wed Mar  7 02:58:28 CET 2018] scale:1000000 groups:10000 work_mem:8MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 409 [Wed Mar  7 02:58:30 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 410 [Wed Mar  7 02:58:32 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 411 [Wed Mar  7 02:58:33 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 412 [Wed Mar  7 02:58:34 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 413 [Wed Mar  7 02:58:36 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 414 [Wed Mar  7 02:58:38 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 415 [Wed Mar  7 02:58:41 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 416 [Wed Mar  7 02:58:42 CET 2018] scale:1000000 groups:10000 work_mem:16MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 417 [Wed Mar  7 02:58:44 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 418 [Wed Mar  7 02:58:46 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 419 [Wed Mar  7 02:58:47 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 420 [Wed Mar  7 02:58:48 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 421 [Wed Mar  7 02:58:49 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 422 [Wed Mar  7 02:58:52 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 423 [Wed Mar  7 02:58:54 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 424 [Wed Mar  7 02:58:56 CET 2018] scale:1000000 groups:10000 work_mem:32MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=149037.84..149037.84 rows=1 width=20)
   ->  Sort  (cost=136537.84..139037.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 425 [Wed Mar  7 02:58:57 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 426 [Wed Mar  7 02:58:59 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 427 [Wed Mar  7 02:59:01 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 428 [Wed Mar  7 02:59:02 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 429 [Wed Mar  7 02:59:03 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 430 [Wed Mar  7 02:59:06 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 431 [Wed Mar  7 02:59:08 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 432 [Wed Mar  7 02:59:10 CET 2018] scale:1000000 groups:10000 work_mem:64MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 433 [Wed Mar  7 02:59:12 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 434 [Wed Mar  7 02:59:14 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 435 [Wed Mar  7 02:59:15 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 436 [Wed Mar  7 02:59:16 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 437 [Wed Mar  7 02:59:18 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 438 [Wed Mar  7 02:59:20 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 439 [Wed Mar  7 02:59:22 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 440 [Wed Mar  7 02:59:23 CET 2018] scale:1000000 groups:10000 work_mem:128MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 441 [Wed Mar  7 02:59:24 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Limit  (cost=93291.67..93291.67 rows=1 width=20)
   ->  Incremental Sort  (cost=7.00..83291.67 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         Presorted Key: s_1.a
         ->  Index Scan using s_1_a_idx on s_1  (cost=0.42..32353.42 rows=1000000 width=20)
(5 rows)

===== 442 [Wed Mar  7 02:59:26 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                          QUERY PLAN                                          
----------------------------------------------------------------------------------------------
 Limit  (cost=86822.38..86822.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.00..76822.38 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         Presorted Key: s_2.a, s_2.b
         ->  Index Scan using s_2_a_b_idx on s_2  (cost=0.42..40712.74 rows=1000000 width=20)
(5 rows)

===== 443 [Wed Mar  7 02:59:27 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         Presorted Key: s_3.a, s_3.b, s_3.c
         ->  Index Scan using s_3_a_b_c_idx on s_3  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 444 [Wed Mar  7 02:59:28 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:on max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Limit  (cost=91254.38..91254.38 rows=1 width=20)
   ->  Incremental Sort  (cost=1.04..81254.38 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         Presorted Key: s_4.a, s_4.b, s_4.c, s_4.d
         ->  Index Scan using s_4_a_b_c_d_idx on s_4  (cost=0.42..45144.74 rows=1000000 width=20)
(5 rows)

===== 445 [Wed Mar  7 02:59:30 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_1 ORDER BY a, b
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_1.a, s_1.b
         ->  Seq Scan on s_1  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 446 [Wed Mar  7 02:59:32 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_2 ORDER BY a, b, c
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_2.a, s_2.b, s_2.c
         ->  Seq Scan on s_2  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 447 [Wed Mar  7 02:59:34 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_3 ORDER BY a, b, c, d
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_3.a, s_3.b, s_3.c, s_3.d
         ->  Seq Scan on s_3  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

===== 448 [Wed Mar  7 02:59:35 CET 2018] scale:1000000 groups:10000 work_mem:256MB incremental:off max_workers:2 =====
SELECT * FROM s_4 ORDER BY a, b, c, d, e
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Limit  (cost=128527.84..128527.84 rows=1 width=20)
   ->  Sort  (cost=116027.84..118527.84 rows=1000000 width=20)
         Sort Key: s_4.a, s_4.b, s_4.c, s_4.d, s_4.e
         ->  Seq Scan on s_4  (cost=0.00..16370.00 rows=1000000 width=20)
(4 rows)

